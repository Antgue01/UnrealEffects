#line 1 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MAJOR 6

#line 2 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MINOR 6

#line 3 "DumpShaderDefinesAsCommentedCode"
// #define ALLOW_STATIC_LIGHTING 1

#line 4 "DumpShaderDefinesAsCommentedCode"
// #define AMPLIFICATIONSHADER 0

#line 5 "DumpShaderDefinesAsCommentedCode"
// #define CLEAR_COAT_BOTTOM_NORMAL 0

#line 6 "DumpShaderDefinesAsCommentedCode"
// #define COMPILE_SHADERS_FOR_DEVELOPMENT 1

#line 7 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DEFINE #define

#line 8 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DXC 1

#line 9 "DumpShaderDefinesAsCommentedCode"
// #define COMPUTESHADER 1

#line 10 "DumpShaderDefinesAsCommentedCode"
// #define DO_CHECK 1

#line 11 "DumpShaderDefinesAsCommentedCode"
// #define DO_GUARD_SLOW 0

#line 12 "DumpShaderDefinesAsCommentedCode"
// #define DXT5_NORMALMAPS 0

#line 13 "DumpShaderDefinesAsCommentedCode"
// #define EARLY_Z_PASS_ONLY_MATERIAL_MASKING 0

#line 14 "DumpShaderDefinesAsCommentedCode"
// #define FORWARD_SHADING 0

#line 15 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_DIFFUSE_SAMPLE_OCCLUSION 0

#line 16 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_VELOCITY 0

#line 17 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_REFACTOR 1

#line 18 "DumpShaderDefinesAsCommentedCode"
// #define GEOMETRYSHADER 0

#line 19 "DumpShaderDefinesAsCommentedCode"
// #define GPU_SIMULATION 1

#line 20 "DumpShaderDefinesAsCommentedCode"
// #define GPU_SIMULATION_SHADER 1

#line 21 "DumpShaderDefinesAsCommentedCode"
// #define HAS_INVERTED_Z_BUFFER 1

#line 22 "DumpShaderDefinesAsCommentedCode"
// #define INSTANCED_STEREO 0

#line 23 "DumpShaderDefinesAsCommentedCode"
// #define IRIS_NORMAL 0

#line 24 "DumpShaderDefinesAsCommentedCode"
// #define LEGACY_MATERIAL_ENERGYCONSERVATION 0

#line 25 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ROUGHDIFFUSE 0

#line 26 "DumpShaderDefinesAsCommentedCode"
// #define MESHSHADER 0

#line 27 "DumpShaderDefinesAsCommentedCode"
// #define MOBILE_MULTI_VIEW 0

#line 28 "DumpShaderDefinesAsCommentedCode"
// #define MULTI_VIEW 0

#line 29 "DumpShaderDefinesAsCommentedCode"
// #define NIAGARA_COMPRESSED_ATTRIBUTES_ENABLED 0

#line 30 "DumpShaderDefinesAsCommentedCode"
// #define NIAGARA_DISPATCH_INDIRECT 0

#line 31 "DumpShaderDefinesAsCommentedCode"
// #define NIAGARA_DISPATCH_TYPE 0

#line 32 "DumpShaderDefinesAsCommentedCode"
// #define NIAGARA_MAX_GPU_SPAWN_INFOS 8

#line 33 "DumpShaderDefinesAsCommentedCode"
// #define PIXELSHADER 0

#line 34 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_ALLOW_SCENE_DATA_COMPRESSED_TRANSFORMS 1

#line 35 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BINDLESS 0

#line 36 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BUFFER_LOAD_TYPE_CONVERSION 1

#line 37 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_CLIP_DISTANCE 1

#line 38 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_DISTANCE_FIELDS 1

#line 39 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER0 1

#line 40 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER1 1

#line 41 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_PER_PIXEL_DBUFFER_MASK 0

#line 42 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_RENDERTARGET_WRITE_MASK 0

#line 43 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_UB_STRUCT 1

#line 44 "DumpShaderDefinesAsCommentedCode"
// #define POST_PROCESS_ALPHA 0

#line 45 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_ALLOW_GLOBAL_CLIP_PLANE 0

#line 46 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_MOBILE_DISABLE_VERTEX_FOG 1

#line 47 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_OIT 0

#line 48 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_STRATA_BACKCOMPATIBILITY 0

#line 49 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE 1

#line 50 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE_AFFECTS_HEIGHFOG 1

#line 51 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORTS_LUMEN 1

#line 52 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_VERTEX_FOGGING_FOR_OPAQUE 0

#line 53 "DumpShaderDefinesAsCommentedCode"
// #define RAYCALLABLESHADER 0

#line 54 "DumpShaderDefinesAsCommentedCode"
// #define RAYGENSHADER 0

#line 55 "DumpShaderDefinesAsCommentedCode"
// #define RAYHITGROUPSHADER 0

#line 56 "DumpShaderDefinesAsCommentedCode"
// #define RAYMISSSHADER 0

#line 57 "DumpShaderDefinesAsCommentedCode"
// #define SELECTIVE_BASEPASS_OUTPUTS 0

#line 58 "DumpShaderDefinesAsCommentedCode"
// #define SHADING_PATH_DEFERRED 1

#line 59 "DumpShaderDefinesAsCommentedCode"
// #define SimulationStageIndex 0

#line 60 "DumpShaderDefinesAsCommentedCode"
// #define SM6_PROFILE 1

#line 61 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ADVANCED_DEBUG_ENABLED 0

#line 62 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ENABLED 0

#line 63 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_OPAQUE_ROUGH_REFRACTION_ENABLED 0

#line 64 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_FORWARD_LIT_TRANSLUCENT 0

#line 65 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_SINGLE_LAYER_WATER 0

#line 66 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_RECTLIGHT_ON_FORWARD_LIT_TRANSLUCENT 0

#line 67 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_VSM_FOWARD_QUALITY 0

#line 68 "DumpShaderDefinesAsCommentedCode"
// #define THREADGROUP_SIZE 64

#line 69 "DumpShaderDefinesAsCommentedCode"
// #define THREADGROUP_SIZE_X 64

#line 70 "DumpShaderDefinesAsCommentedCode"
// #define THREADGROUP_SIZE_Y 1

#line 71 "DumpShaderDefinesAsCommentedCode"
// #define THREADGROUP_SIZE_Z 1

#line 72 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE 2097152.00f

#line 73 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_2PI 0.673652053f

#line 74 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_PI 0.673652053f

#line 75 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RCP 4.76837158e-07f

#line 76 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RSQRT 0.000690533954f

#line 77 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_SQRT 1448.15466f

#line 78 "DumpShaderDefinesAsCommentedCode"
// #define USE_DBUFFER 1

#line 79 "DumpShaderDefinesAsCommentedCode"
// #define USE_WAVE_INTRINSICS 0

#line 80 "DumpShaderDefinesAsCommentedCode"
// #define VELOCITY_ENCODE_DEPTH 1

#line 81 "DumpShaderDefinesAsCommentedCode"
// #define VERTEXSHADER 0

#line 82 "DumpShaderDefinesAsCommentedCode"
// #define VIRTUAL_TEXTURE_ANISOTROPIC_FILTERING 0

#line 83 "DumpShaderDefinesAsCommentedCode"
// #define WORKING_COLOR_SPACE_IS_SRGB 1

#line 6 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#pragma warning(disable:4008)

#line 110 "/Engine/Private/Random.ush"
uint3 Rand3DPCG32(int3 p)
{
	
	uint3 v = uint3(p);

	
	v = v * 1664525u + 1013904223u;

	
	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;

	
	v ^= v >> 16u;

	
	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;

	return v;
}

#line 25 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
const static float TWO_PI = 3.1415926535897932f*2.0f;

#line 30 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 ModuloPrecise(float4 x, float4 y){ return x - y * trunc(x/y); }

#line 31 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 ModuloPrecise(float3 x, float3 y){ return x - y * trunc(x/y); }

#line 32 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float2 ModuloPrecise(float2 x, float2 y){ return x - y * trunc(x/y);}

#line 33 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float ModuloPrecise(float x, float y){ return x - y * trunc(x/y); }

#line 34 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int ModuloPrecise(int x, int y){ return x - y * (x/y); }

#line 46 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
bool NiagaraAll(bool b) { return b; }

#line 49 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
bool NiagaraAll(bool2 b) { return all(b); }

#line 50 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
bool NiagaraAll(bool3 b) { return all(b); }

#line 51 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
bool NiagaraAll(bool4 b) { return all(b); }

#line 89 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint3 DispatchThreadIdToLinear;

#line 92 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint3 GDispatchThreadId;

#line 93 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint3 GGroupId;

#line 94 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint3 GGroupThreadId;

#line 95 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint  GGroupIndex;

#line 96 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint GLinearThreadId;

#line 97 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint GEmitterTickCounter;

#line 98 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint GRandomSeedOffset = 0;

#line 107 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint EmitterTickCounter;

#line 127 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float NiagaraInternalNoise(uint u, uint v, uint s)
	{
		uint Seed = (u * 1664525u + v) + s + GRandomSeedOffset;
		GRandomSeedOffset += Seed;
		return float(Rand3DPCG32(int3(u,v,Seed)).x) / 4294967296.0f;
	}

#line 137 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int4	EmitterSpawnInfoOffsets[((8 + 3) / 4)];

#line 138 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4	EmitterSpawnInfoParams[8];

#line 141 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static float Emitter_SpawnInterval;

#line 142 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static float Emitter_InterpSpawnStartDt;

#line 143 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static int Emitter_SpawnGroup;

#line 145 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static int Engine_ExecutionCount;

#line 146 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static int GGPUExecIndex;

#line 148 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static uint GSpawnStartInstance;

#line 149 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint NumSpawnedInstances;

#line 151 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void SetupExecIndexForGPU()
	{
		GGPUExecIndex = GLinearThreadId;
		Engine_ExecutionCount = GSpawnStartInstance;
	}

#line 157 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void SetupExecIndexAndSpawnInfoForGPU()
	{
		GGPUExecIndex = GLinearThreadId - GSpawnStartInstance;

		int SpawnInfoIndex = 0;
		[unroll]
		for (int i = 0; i < ((8 + 3) / 4); ++i)
		{
			
			
			int4 CompareResults = GGPUExecIndex >= EmitterSpawnInfoOffsets[i];
			CompareResults = CompareResults & int4(1, 1, 1, 1);
			SpawnInfoIndex += CompareResults.x + CompareResults.y + CompareResults.z + CompareResults.w;
		}

		Emitter_SpawnInterval		= EmitterSpawnInfoParams[SpawnInfoIndex].x;
		Emitter_InterpSpawnStartDt	= EmitterSpawnInfoParams[SpawnInfoIndex].y;
		Emitter_SpawnGroup			= asint(EmitterSpawnInfoParams[SpawnInfoIndex].z);

		int GroupSpawnStartIndex    = asint(EmitterSpawnInfoParams[SpawnInfoIndex].w);
		GGPUExecIndex		        = GGPUExecIndex - GroupSpawnStartIndex;
		if ( SpawnInfoIndex == (8 - 1) )
		{
			Engine_ExecutionCount   = int(NumSpawnedInstances) - GroupSpawnStartIndex;
		}
		else
		{
			int NextGroupSpawnStartIndex = asint(EmitterSpawnInfoParams[SpawnInfoIndex + 1].w);
			Engine_ExecutionCount       = NextGroupSpawnStartIndex - GroupSpawnStartIndex;
		}
	}

#line 191 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int ExecIndex()
	{
		return GGPUExecIndex;
	}

#line 228 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand4(int Seed1, int Seed2, int Seed3, int Seed4)
{
	int4 v = int4(Seed4, Seed1, Seed2, Seed3) * 1664525 + 1013904223;

	v.x += v.y*v.w;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.w += v.y*v.z;
	v.x += v.y*v.w;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.w += v.y*v.z;

	
	
	

	
	return float4((v >> 8) & 0x00ffffff) / 16777216.0; 
	
}

#line 256 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 rand3(int Seed1, int Seed2, int Seed3, int Seed4)
{
	int3 v = int3(Seed1, Seed2, Seed4 | (Seed3 << 16)) * 1664525 + 1013904223;

	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;

	return float3((v >> 8) & 0x00ffffff) / 16777216.0; 
}

#line 271 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static int RandomCounterDeterministic = 0;

#line 274 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float rand(float x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * x;
}

#line 281 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float2 rand(float2 x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xy * x;
}

#line 288 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 rand(float3 x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyz * x;
}

#line 295 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand(float4 x, int Seed1, int Seed2, int Seed3) 
{
	RandomCounterDeterministic += 1;
	return rand4(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyzw * x;
}

#line 302 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int rand(int x, int Seed1, int Seed2, int Seed3)
{
	
	
	RandomCounterDeterministic += 1;
	return int(rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * (x+1));
}

#line 323 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
static int RandomCounterNonDeterministic = -1;

#line 325 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float rand(float x)
	{
		RandomCounterNonDeterministic -= 1;
		return rand4(GLinearThreadId, EmitterTickCounter, GLinearThreadId, RandomCounterNonDeterministic).x * x;
	}

#line 331 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float2 rand(float2 x)
	{
		RandomCounterNonDeterministic -= 1;
		return rand4(GLinearThreadId, EmitterTickCounter, GLinearThreadId, RandomCounterNonDeterministic).xy * x;
	}

#line 337 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 rand(float3 x)
	{
		RandomCounterNonDeterministic -= 1;
		return rand4(GLinearThreadId, EmitterTickCounter, GLinearThreadId, RandomCounterNonDeterministic).xyz * x;
	}

#line 343 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand(float4 x) 
	{
		RandomCounterNonDeterministic -= 1;
		return rand4(GLinearThreadId, EmitterTickCounter, GLinearThreadId, RandomCounterNonDeterministic).xyzw * x;
	}

#line 350 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int rand(int x)
	{
		RandomCounterNonDeterministic -= 1;
		return int(rand4(GLinearThreadId, EmitterTickCounter, GLinearThreadId, RandomCounterNonDeterministic).x * (x+1));
	}

#line 407 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float rand_float(float x)
{
	return rand(x.x);
}

#line 412 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float2 rand_float(float2 x)
{
	return float2(rand_float(x.x), rand_float(x.y));
}

#line 417 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 rand_float(float3 x)
{
	return float3(rand_float(x.x), rand_float(x.y), rand_float(x.z));
}

#line 422 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand_float(float4 x) 
{
	return float4(rand_float(x.x), rand_float(x.y), rand_float(x.z), rand_float(x.w));
}

#line 436 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float rand_float(float x, int Seed1, int Seed2, int Seed3)
{
	return rand(x.x, Seed1, Seed2, Seed3);
}

#line 441 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float2 rand_float(float2 x, int Seed1, int Seed2, int Seed3)
{
	return rand(x, Seed1, Seed2, Seed3);
}

#line 446 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float3 rand_float(float3 x, int Seed1, int Seed2, int Seed3)
{
	return rand(x, Seed1, Seed2, Seed3);
}

#line 451 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand_float(float4 x, int Seed1, int Seed2, int Seed3) 
{
	return rand(x, Seed1, Seed2, Seed3);
}

#line 512 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint ComponentBufferSizeRead;

#line 513 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint ComponentBufferSizeWrite;

#line 519 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
Buffer<float> InputFloat;

#line 520 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
Buffer<int> InputInt;

#line 523 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
RWBuffer<int> RWOutputInt;

#line 524 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
RWBuffer<float> RWOutputFloat;

#line 529 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
RWBuffer<uint> RWInstanceCounts;

#line 530 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint ReadInstanceCountOffset;

#line 531 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
uint WriteInstanceCountOffset;

#line 584 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
groupshared uint GroupSharedIndex[64];

#line 585 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
groupshared uint GroupSharedIndex4[16];

#line 586 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
groupshared uint GroupSharedIndex16[4];

#line 587 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
groupshared uint GroupSharedIndex64;

#line 599 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int AcquireIndex(uniform int DataSetID, bool bDoAcquire)
	{
		
		int MustBe0[1];
		MustBe0[DataSetID] = 0;
		

		int PrevIdx = GSpawnStartInstance + NumSpawnedInstances;	

		
#line 628 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"


			GroupSharedIndex[GGroupThreadId.x] = bDoAcquire ? 1 : 0;
			GroupMemoryBarrierWithGroupSync(); 

			
			if ((GGroupThreadId.x & 0x3) == 0)
			{
				const uint Index = GGroupThreadId.x;

				const uint ActiveCount1 = GroupSharedIndex[Index];
				const uint ActiveCount2 = ActiveCount1 + GroupSharedIndex[Index + 1];
				const uint ActiveCount3 = ActiveCount2 + GroupSharedIndex[Index + 2];
				const uint ActiveCount4 = ActiveCount3 + GroupSharedIndex[Index + 3];
				
				GroupSharedIndex[Index] = 0;
				GroupSharedIndex[Index + 1] = ActiveCount1;
				GroupSharedIndex[Index + 2] = ActiveCount2;
				GroupSharedIndex[Index + 3] = ActiveCount3;
				GroupSharedIndex4[Index / 4] = ActiveCount4;
			}
			GroupMemoryBarrierWithGroupSync(); 

			
			if ((GGroupThreadId.x & 0xF) == 0)
			{
				const uint Index = GGroupThreadId.x / 4;

				const uint ActiveCount1 = GroupSharedIndex4[Index];
				const uint ActiveCount2 = ActiveCount1 + GroupSharedIndex4[Index + 1];
				const uint ActiveCount3 = ActiveCount2 + GroupSharedIndex4[Index + 2];
				const uint ActiveCount4 = ActiveCount3 + GroupSharedIndex4[Index + 3];

				GroupSharedIndex4[Index] = 0;
				GroupSharedIndex4[Index + 1] = ActiveCount1;
				GroupSharedIndex4[Index + 2] = ActiveCount2;
				GroupSharedIndex4[Index + 3] = ActiveCount3;
				GroupSharedIndex16[Index / 4] = ActiveCount4;
			}
			GroupMemoryBarrierWithGroupSync(); 

			
			if ((GGroupThreadId.x & 0x3F) == 0)
			{
				const uint Index = GGroupThreadId.x / 16;
				uint RetPrevIdx = 0;
		
				const uint ActiveCount1 = GroupSharedIndex16[Index];
				const uint ActiveCount2 = ActiveCount1 + GroupSharedIndex16[Index + 1];
		
				const uint ActiveCount3 = ActiveCount2 + GroupSharedIndex16[Index + 2];
				const uint ActiveCount4 = ActiveCount3 + GroupSharedIndex16[Index + 3];
		

				GroupSharedIndex16[Index] = 0;
				GroupSharedIndex16[Index + 1] = ActiveCount1;
		
				GroupSharedIndex16[Index + 2] = ActiveCount2;
				GroupSharedIndex16[Index + 3] = ActiveCount3;

				InterlockedAdd(RWInstanceCounts[WriteInstanceCountOffset], ActiveCount4, RetPrevIdx);
		


				GroupSharedIndex64 = RetPrevIdx;
			}
			GroupMemoryBarrierWithGroupSync(); 

			PrevIdx = GroupSharedIndex64 + GroupSharedIndex16[GGroupThreadId.x / 16] + GroupSharedIndex4[GGroupThreadId.x / 4] + GroupSharedIndex[GGroupThreadId.x];

		












		return PrevIdx;
	}

#line 718 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float InputDataFloat(int DataSetIndex, int RegisterIdx, int InstanceIdx)
	{
		


			return InputFloat[RegisterIdx*ComponentBufferSizeRead + InstanceIdx];
		
	}

#line 727 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int InputDataInt(int DataSetIndex, int RegisterIdx, int InstanceIdx)
	{
		


			return InputInt[RegisterIdx*ComponentBufferSizeRead + InstanceIdx];
		
	}

#line 758 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void OutputDataFloat(int DataSetIndex, int RegisterIndex, int InstanceIndex, float Value)
	{
		RWOutputFloat[RegisterIndex*ComponentBufferSizeWrite + InstanceIndex] = Value;
	}

#line 763 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void OutputDataInt(int DataSetIndex, int RegisterIndex, int InstanceIndex, int Value)
	{
		RWOutputInt[RegisterIndex*ComponentBufferSizeWrite + InstanceIndex] = Value;
	}

#line 778 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void EnterStatScope(int ID)	{}

#line 779 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
void ExitStatScope()	{}

#line 785 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
int OutputIndex(const int DataSetID, const bool bStageKillsParticles, const bool bIsValid)
	{
	
		
		
		
		
		
		if (!bStageKillsParticles)
		{
			return GLinearThreadId;
		}
	

		return AcquireIndex(DataSetID, bIsValid);
	}

#line 804 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
struct NiagaraRandInfo
{
	int Seed1;
	int Seed2;
	int Seed3;
};

#line 20 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_WorldDeltaTime;

#line 21 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_DeltaTime;

#line 22 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_InverseDeltaTime;

#line 23 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_Time;

#line 24 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_RealTime;

#line 31 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_Time;

#line 32 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_RealTime;

#line 36 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_Owner_TimeSinceRendered;

#line 37 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_Owner_LODDistance;

#line 38 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_Owner_LODDistanceFraction;

#line 39 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Engine_System_Age;

#line 41 "/Engine/Generated/NiagaraEmitterInstance.ush"
int Engine_System_TickCount;

#line 45 "/Engine/Generated/NiagaraEmitterInstance.ush"
int Engine_System_RandomSeed;

#line 52 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_Owner_TimeSinceRendered;

#line 53 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_Owner_LODDistance;

#line 54 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_Owner_LODDistanceFraction;

#line 55 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Engine_System_Age;

#line 68 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4x4 Engine_Owner_SystemLocalToWorld;

#line 69 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4x4 Engine_Owner_SystemWorldToLocal;

#line 72 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4x4 Engine_Owner_SystemLocalToWorldNoScale;

#line 73 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4x4 Engine_Owner_SystemWorldToLocalNoScale;

#line 74 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4 Engine_Owner_Rotation;

#line 75 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_Position;

#line 77 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_Velocity;

#line 79 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_SystemXAxis;

#line 81 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_SystemYAxis;

#line 83 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_SystemZAxis;

#line 85 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 Engine_Owner_Scale;

#line 87 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4 Engine_Owner_LWCTile;

#line 94 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4 PREV_Engine_Owner_Rotation;

#line 95 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_Position;

#line 97 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_Velocity;

#line 99 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_SystemXAxis;

#line 101 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_SystemYAxis;

#line 103 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_SystemZAxis;

#line 105 "/Engine/Generated/NiagaraEmitterInstance.ush"
float3 PREV_Engine_Owner_Scale;

#line 107 "/Engine/Generated/NiagaraEmitterInstance.ush"
float4 PREV_Engine_Owner_LWCTile;

#line 109 "/Engine/Generated/NiagaraEmitterInstance.ush"
int Engine_Emitter_TotalSpawnedParticles;

#line 111 "/Engine/Generated/NiagaraEmitterInstance.ush"
float Emitter_Age;

#line 112 "/Engine/Generated/NiagaraEmitterInstance.ush"
int Emitter_RandomSeed;

#line 113 "/Engine/Generated/NiagaraEmitterInstance.ush"
int Engine_Emitter_InstanceSeed;

#line 119 "/Engine/Generated/NiagaraEmitterInstance.ush"
float PREV_Emitter_Age;

#line 124 "/Engine/Generated/NiagaraEmitterInstance.ush"
cbuffer FNiagaraExternalParameters
{
	float Constants_Emitter_InitializeParticle_Lifetime;
	float Constants_Emitter_InitializeParticle_UniformSpriteSize;
	float4 Constants_Emitter_InitializeParticle_PositionOffset;
	float Emitter_DistanceTraveled;
	int Emitter_SpawnParticlesInGrid_GridLocationXCount;
	int Emitter_SpawnParticlesInGrid_GridLocationYCount;
	int Emitter_SpawnParticlesInGrid_GridLocationZCount;
	float4 Constants_Emitter_GridLocation_XYZDimensions;
	float4 Constants_Emitter_GridLocation_Offset;
	float4 Constants_Emitter_GridLocation_RandomizePlacementWithinCell;
	int Constants_Emitter_GridLocation_RandomPlacementSeed;
	float Constants_Emitter_Cosine001_Period;
	float Constants_Emitter_Cosine001_Scale;
	float Constants_Emitter_Cosine001_Bias;
	float Constants_Emitter_SampleTexture001_MipLevel;
	float4 Constants_Emitter_Color001_ScaleColor;
	float Constants_Emitter_Color001_ScaleAlpha;
	float Emitter_AlphaScale;
	float Constants_Emitter_Multiply_Float001_B;
	float Constants_Emitter_MakeVector001_X;
	float Constants_Emitter_MakeVector001_Y;
	float Emitter_SpawnRate;
}

#line 150 "/Engine/Generated/NiagaraEmitterInstance.ush"
cbuffer PREV_FNiagaraExternalParameters
{
	float PREV_Constants_Emitter_InitializeParticle_Lifetime;
	float PREV_Constants_Emitter_InitializeParticle_UniformSpriteSize;
	float4 PREV_Constants_Emitter_InitializeParticle_PositionOffset;
	float PREV_Emitter_DistanceTraveled;
	int PREV_Emitter_SpawnParticlesInGrid_GridLocationXCount;
	int PREV_Emitter_SpawnParticlesInGrid_GridLocationYCount;
	int PREV_Emitter_SpawnParticlesInGrid_GridLocationZCount;
	float4 PREV_Constants_Emitter_GridLocation_XYZDimensions;
	float4 PREV_Constants_Emitter_GridLocation_Offset;
	float4 PREV_Constants_Emitter_GridLocation_RandomizePlacementWithinCell;
	int PREV_Constants_Emitter_GridLocation_RandomPlacementSeed;
	float PREV_Constants_Emitter_Cosine001_Period;
	float PREV_Constants_Emitter_Cosine001_Scale;
	float PREV_Constants_Emitter_Cosine001_Bias;
	float PREV_Constants_Emitter_SampleTexture001_MipLevel;
	float4 PREV_Constants_Emitter_Color001_ScaleColor;
	float PREV_Constants_Emitter_Color001_ScaleAlpha;
	float PREV_Emitter_AlphaScale;
	float PREV_Constants_Emitter_Multiply_Float001_B;
	float PREV_Constants_Emitter_MakeVector001_X;
	float PREV_Constants_Emitter_MakeVector001_Y;
	float PREV_Emitter_SpawnRate;
}

#line 176 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Transient
{
	bool FirstFrame;
};

#line 181 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B_Particles
{
	float3 Position;
};

#line 186 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B
{
	FParamMap0_SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B_Particles Particles;
};

#line 191 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1_Particles
{
	float2 UV;
};

#line 196 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1
{
	FParamMap0_SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1_Particles Particles;
};

#line 201 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_SampleTexture001
{
	float2 UV;
};

#line 206 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_ParticleState
{
	float DeltaTime;
	float Lifetime;
};

#line 212 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Particles_SampleTexture001
{
	float SampledA;
	float SampledB;
	float4 SampledColor;
	float SampledG;
	float SampledR;
	float2 SamplerUV;
};

#line 222 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Particles_Previous
{
	float3 Position;
	float2 SpriteSize;
};

#line 228 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Particles_Initial
{
	float3 Position;
};

#line 233 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Particles
{
	float Age;
	float4 Color;
	FParamMap0_Particles_Initial Initial;
	float Lifetime;
	float Mass;
	float MaterialRandom;
	float NormalizedAge;
	float3 Position;
	FParamMap0_Particles_Previous Previous;
	float RibbonUVDistance;
	FParamMap0_Particles_SampleTexture001 SampleTexture001;
	float2 SpriteSize;
	int UniqueID;
	float2 UV;
};

#line 251 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_OUTPUT_VAR_ParticleState
{
	bool FirstFrame;
};

#line 256 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_OUTPUT_VAR_GridLocation
{
	float3 GridCellCoordinate;
	float3 GridSpacing;
	float3 GridUVW;
	float3 NormalizedArraylocation;
	float3 XYZCountAsVector;
	float3 XYZSpacing;
};

#line 266 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_OUTPUT_VAR
{
	FParamMap0_OUTPUT_VAR_GridLocation GridLocation;
	FParamMap0_OUTPUT_VAR_ParticleState ParticleState;
};

#line 272 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Multiply_Float001
{
	float A;
};

#line 277 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_MakeVector2D001
{
	float X;
	float Y;
};

#line 283 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_MakeVector001
{
	float Z;
};

#line 288 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_MakeLinearColorFromFloat001
{
	float Value;
};

#line 293 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_MakeFloatFromVector2d001
{
	int Channel;
	float2 Vector2D;
};

#line 299 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_MakeFloatFromVector2d
{
	int Channel;
	float2 Vector2D;
};

#line 305 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Local_SampleTexture001
{
	float SampledA;
	float SampledB;
	float4 SampledColor;
	float SampledG;
	float SampledR;
	float2 SamplerUV;
	float2 SamplerUV_Centered;
};

#line 316 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Local_InitializeParticle
{
	float InitRIbbonDistance;
};

#line 321 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Local_GridLocation
{
	int GridXCount;
	int GridYCount;
	int GridZCount;
	float3 InitialGridSpacing;
	float3 LocalSpacePosition;
};

#line 330 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Local
{
	FParamMap0_Local_GridLocation GridLocation;
	FParamMap0_Local_InitializeParticle InitializeParticle;
	FParamMap0_Local_SampleTexture001 SampleTexture001;
};

#line 337 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_KillParticles
{
	bool KillParticles;
};

#line 342 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Interpolation
{
	float Emitter_InterpSpawnStartDt;
	int Emitter_SpawnGroup;
	float Emitter_SpawnInterval;
	int InterpSpawn_Index;
	float InterpSpawn_InvSpawnTime;
	float InterpSpawn_InvUpdateTime;
	float InterpSpawn_SpawnTime;
	float InterpSpawn_UpdateTime;
	float SpawnInterp;
};

#line 355 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_InitializeParticle
{
	float MaterialRandom;
	int PositionOffsetCoordinateSpace;
};

#line 361 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_GridLocation
{
	int CoordinateSpace;
	int ExecIndex;
	float3 GridOrigin;
	int GridXCount;
	int GridYCount;
	int GridZCount;
	bool JitterInsideGridCells;
	bool OverrideRandomSeed;
	int PlacementRandomnessMode;
	bool RandomizeOverridenSeed;
};

#line 375 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Engine_System
{
	float Age;
	int CurrentTimeStep;
	int NumEmitters;
	int NumEmittersAlive;
	int NumParticles;
	int NumTimeSteps;
	int PaddingInt32_0;
	int PaddingInt32_1;
	int RandomSeed;
	int SignificanceIndex;
	int TickCount;
	float TimeStepFraction;
};

#line 391 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Engine_Owner
{
	int ExecutionState;
	float LODDistance;
	float LODDistanceFraction;
	float4 LWCTile;
	int PaddingInt32_0;
	int PaddingInt32_1;
	int PaddingInt32_2;
	int PaddingInt32_3;
	int PaddingInt32_4;
	int PaddingInt32_5;
	float3 Position;
	float4 Rotation;
	float3 Scale;
	float4x4 SystemLocalToWorld;
	float4x4 SystemLocalToWorldNoScale;
	float4x4 SystemLocalToWorldTransposed;
	float4x4 SystemWorldToLocal;
	float4x4 SystemWorldToLocalNoScale;
	float4x4 SystemWorldToLocalTransposed;
	float3 SystemXAxis;
	float3 SystemYAxis;
	float3 SystemZAxis;
	float TimeSinceRendered;
	float3 Velocity;
};

#line 419 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Engine_Emitter
{
	int InstanceSeed;
	int NumParticles;
	int PaddingInt32_0;
	int PaddingInt32_1;
	float SpawnCountScale;
	int TotalSpawnedParticles;
};

#line 429 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Engine
{
	float DeltaTime;
	FParamMap0_Engine_Emitter Emitter;
	int ExecutionCount;
	float InverseDeltaTime;
	FParamMap0_Engine_Owner Owner;
	int PaddingInt32_0;
	int PaddingInt32_1;
	int QualityLevel;
	float RealTime;
	FParamMap0_Engine_System System;
	float Time;
	float WorldDeltaTime;
};

#line 445 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Emitter_SpawnParticlesInGrid
{
	int GridLocationXCount;
	int GridLocationYCount;
	int GridLocationZCount;
};

#line 452 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Emitter
{
	float Age;
	float AlphaScale;
	float DistanceTraveled;
	int RandomSeed;
	FParamMap0_Emitter_SpawnParticlesInGrid SpawnParticlesInGrid;
	float SpawnRate;
};

#line 462 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_DataInstance
{
	bool Alive;
};

#line 467 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Cosine001
{
	float NormalizedAngle;
};

#line 472 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Color001
{
	float4 Color;
};

#line 477 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Array_SampleTexture001
{
	int SampledA;
	int SampledB;
	int SampledColor;
	int SampledG;
	int SampledR;
	int SamplerUV;
};

#line 487 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Array_Previous
{
	int Position;
	int SpriteSize;
};

#line 493 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Array_Initial
{
	int Position;
};

#line 498 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Array
{
	int Age;
	int Color;
	FParamMap0_Array_Initial Initial;
	int Lifetime;
	int Mass;
	int MaterialRandom;
	int NormalizedAge;
	int Position;
	FParamMap0_Array_Previous Previous;
	int RibbonUVDistance;
	FParamMap0_Array_SampleTexture001 SampleTexture001;
	int SpriteSize;
	int UniqueID;
	int UV;
};

#line 516 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_AddVectorToPosition001
{
	float3 Position;
	float3 VECTOR_VAR;
};

#line 522 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0_Add_Float001
{
	float A;
	float B;
};

#line 528 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FParamMap0
{
	FParamMap0_Add_Float001 Add_Float001;
	FParamMap0_AddVectorToPosition001 AddVectorToPosition001;
	FParamMap0_Array Array;
	FParamMap0_Color001 Color001;
	FParamMap0_Cosine001 Cosine001;
	FParamMap0_DataInstance DataInstance;
	FParamMap0_Emitter Emitter;
	FParamMap0_Engine Engine;
	FParamMap0_GridLocation GridLocation;
	FParamMap0_InitializeParticle InitializeParticle;
	FParamMap0_Interpolation Interpolation;
	FParamMap0_KillParticles KillParticles;
	FParamMap0_Local Local;
	FParamMap0_MakeFloatFromVector2d MakeFloatFromVector2d;
	FParamMap0_MakeFloatFromVector2d001 MakeFloatFromVector2d001;
	FParamMap0_MakeLinearColorFromFloat001 MakeLinearColorFromFloat001;
	FParamMap0_MakeVector001 MakeVector001;
	FParamMap0_MakeVector2D001 MakeVector2D001;
	FParamMap0_Multiply_Float001 Multiply_Float001;
	FParamMap0_OUTPUT_VAR OUTPUT_VAR;
	FParamMap0_Particles Particles;
	FParamMap0_ParticleState ParticleState;
	FParamMap0_SampleTexture001 SampleTexture001;
	FParamMap0_SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1 SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1;
	FParamMap0_SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B;
	FParamMap0_Transient Transient;
};

#line 558 "/Engine/Generated/NiagaraEmitterInstance.ush"
struct FSimulationContext
{

	FParamMap0 MapSpawn;


	FParamMap0 MapUpdate;

};

#line 568 "/Engine/Generated/NiagaraEmitterInstance.ush"
static float HackSpawnInterp = 1.0;

#line 569 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_(int In_Engine_System_RandomSeed, float In_FloatMin, float In_FloatMax, int In_Seed, int In_Engine_System_TickCount, int In_Particles_UniqueID, int In_Emitter_RandomSeed, int In_Engine_Emitter_InstanceSeed, out float Out_RandomFloat, out bool Out_IsDeterministic, inout FSimulationContext Context);

#line 570 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5167_Particle_Func_(float3 In_Engine_Owner_Position, out float3 Out_SimulationPosition, inout FSimulationContext Context);

#line 571 "/Engine/Generated/NiagaraEmitterInstance.ush"
void InitializeParticle_Emitter_Func_(inout FSimulationContext Context);

#line 572 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context);

#line 573 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5154_Func_(float2 In_Min, float2 In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float2 Out_Result, inout FSimulationContext Context);

#line 574 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5156_Func_(float In_Min, float In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, out float Out_Result, inout FSimulationContext Context);

#line 575 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5153_Func_(int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float3 Out_UnitVector3D, out float2 Out_UnitVector2D, inout FSimulationContext Context);

#line 576 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5152_Func_(int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float3 Out_Vector, inout FSimulationContext Context);

#line 577 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5139_Func_(int In_SourceSpace, int In_DestinationSpace, float4x4 In_LocalToWorldTransform, float4x4 In_WorldToLocalTransform, bool In_bLocalSpace, out bool Out_bUseOriginal, out float4x4 Out_OutTransform, out bool Out_LocalToWorld, inout FSimulationContext Context);

#line 578 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_(float3 In_InVector, int In_SourceSpace, int In_DestinationSpace, bool In_ApplyScale, float4x4 In_Engine_Owner_SystemLocalToWorld, float4x4 In_Engine_Owner_SystemWorldToLocal, float4x4 In_Engine_Owner_SystemLocalToWorldNoScale, float4x4 In_Engine_Owner_SystemWorldToLocalNoScale, out float3 Out_OutVector, inout FSimulationContext Context);

#line 579 "/Engine/Generated/NiagaraEmitterInstance.ush"
void GridLocation_Emitter_Func_(inout FSimulationContext Context);

#line 580 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_(out float2 Out_CustomHLSLOutput, inout FSimulationContext Context);

#line 581 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1_Emitter_Func_(inout FSimulationContext Context);

#line 582 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlsl04C64086480DA644FCC88485B815E918_Func_(float In_InFloat, out float Out_OutFloat);

#line 583 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5150_Particle_Func_(float In_Value, out float Out_ClampedValue, inout FSimulationContext Context);

#line 584 "/Engine/Generated/NiagaraEmitterInstance.ush"
void ParticleState_Emitter_Func_(inout FSimulationContext Context);

#line 585 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5181_Particle_Func_(int In_TargetChannel, float2 In_Vector2D, out float Out_Float, inout FSimulationContext Context);

#line 586 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeFloatFromVector2d_Emitter_Func_(out float Out_Float, inout FSimulationContext Context);

#line 587 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Cosine001_Emitter_Func_(out float Out_NewOutput, inout FSimulationContext Context);

#line 588 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeFloatFromVector2d001_Emitter_Func_(out float Out_Float, inout FSimulationContext Context);

#line 589 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Add_Float001_Emitter_Func_(out float Out_Result, inout FSimulationContext Context);

#line 590 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeVector2D001_Emitter_Func_(out float2 Out_Vec2, inout FSimulationContext Context);

#line 591 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SampleTexture2D_Emitter_SampleTexture001_Texture(float2 In_UV, float In_MipLevel, out float4 Out_Value);

#line 592 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SampleTexture001_Emitter_Func_(int In_Engine_System_TickCount, int In_Engine_Emitter_InstanceSeed, inout FSimulationContext Context);

#line 593 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeLinearColorFromFloat001_Emitter_Func_(out float4 Out_LinearColor, inout FSimulationContext Context);

#line 594 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Color001_Emitter_Func_(inout FSimulationContext Context);

#line 595 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Multiply_Float001_Emitter_Func_(out float Out_Result, inout FSimulationContext Context);

#line 596 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeVector001_Emitter_Func_(out float3 Out_Vec3, inout FSimulationContext Context);

#line 597 "/Engine/Generated/NiagaraEmitterInstance.ush"
void AddVectorToPosition001_Emitter_Func_(out float3 Out_Position, inout FSimulationContext Context);

#line 598 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B_Emitter_Func_(inout FSimulationContext Context);

#line 599 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_(out bool Out_CustomHLSLOutput, inout FSimulationContext Context);

#line 600 "/Engine/Generated/NiagaraEmitterInstance.ush"
void KillParticles_Emitter_Func_(inout FSimulationContext Context);

#line 603 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_(int In_Engine_System_RandomSeed, float In_FloatMin, float In_FloatMax, int In_Seed, int In_Engine_System_TickCount, int In_Particles_UniqueID, int In_Emitter_RandomSeed, int In_Engine_Emitter_InstanceSeed, out float Out_RandomFloat, out bool Out_IsDeterministic, inout FSimulationContext Context)
{
	bool Constant23 = false;
	float Result = In_FloatMax - In_FloatMin;
	float Result1 = rand_float(Result);
	float Result2 = In_FloatMin + Result1;
	Out_RandomFloat = Result2;
	Out_IsDeterministic = Constant23;
}

#line 615 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5167_Particle_Func_(float3 In_Engine_Owner_Position, out float3 Out_SimulationPosition, inout FSimulationContext Context)
{
	Out_SimulationPosition = Context.MapSpawn.Engine.Owner.Position;
}

#line 622 "/Engine/Generated/NiagaraEmitterInstance.ush"
void InitializeParticle_Emitter_Func_(inout FSimulationContext Context)
{
	Context.MapSpawn.Particles.MaterialRandom = Context.MapSpawn.InitializeParticle.MaterialRandom;
	Context.MapSpawn.Particles.Lifetime = Constants_Emitter_InitializeParticle_Lifetime;
	float Constant25 = 1;
	Context.MapSpawn.Particles.Mass = Constant25;
	float2 Output1;
	Output1.x = Constants_Emitter_InitializeParticle_UniformSpriteSize;
	Output1.y = Constants_Emitter_InitializeParticle_UniformSpriteSize;
	Context.MapSpawn.Particles.SpriteSize = Output1;
	float3 Constant26 = float3(0,0,0);
	float3 NiagaraScript_5167_Particle_Func_Output_SimulationPosition;
	NiagaraScript_5167_Particle_Func_(Constant26, NiagaraScript_5167_Particle_Func_Output_SimulationPosition, Context);
	float Constant27 = 0;
	float3 Result3 = Constants_Emitter_InitializeParticle_PositionOffset.xyz * Constant27;
	float3 Result4 = NiagaraScript_5167_Particle_Func_Output_SimulationPosition + Result3;
	Context.MapSpawn.Particles.Position = Result4;
	Context.MapSpawn.Local.InitializeParticle.InitRIbbonDistance = Context.MapSpawn.Particles.RibbonUVDistance;
}

#line 644 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context)
{
	bool Constant39 = false;
	int Constant40 = 0;
	bool Result16 = NiagaraAll(In_RandomnessMode == Constant40);
	bool Result17 = Constant39 && Result16;
	int Constant41 = 1;
	bool Result18 = NiagaraAll(In_RandomnessMode == Constant41);
	bool Result19 = Result17 || Result18;
	int Seed_IfResult;
	if(In_OverrideSeed)
	{
	Seed_IfResult = In_Seed;
	}
	else
	{
	Seed_IfResult = Context.MapSpawn.Emitter.RandomSeed;
	}
	int Constant42 = 0;
	int Constant43 = 0;
	int Seed1_IfResult;
	int Seed2_IfResult;
	int Seed3_IfResult;
	if(In_FixedOverrideSeed)
	{
	Seed1_IfResult = Seed_IfResult;
	Seed2_IfResult = Constant42;
	Seed3_IfResult = Constant43;
	}
	else
	{
	Seed1_IfResult = Context.MapSpawn.Particles.UniqueID;
	Seed2_IfResult = Context.MapSpawn.Engine.System.TickCount;
	Seed3_IfResult = Seed_IfResult;
	}
	int Constant44 = -1;
	int Constant45 = -1;
	int Constant46 = -1;
	int Seed1_IfResult1;
	int Seed2_IfResult1;
	int Seed3_IfResult1;
	if(Result19)
	{
	Seed1_IfResult1 = Seed1_IfResult;
	Seed2_IfResult1 = Seed2_IfResult;
	Seed3_IfResult1 = Seed3_IfResult;
	}
	else
	{
	Seed1_IfResult1 = Constant44;
	Seed2_IfResult1 = Constant45;
	Seed3_IfResult1 = Constant46;
	}
	NiagaraRandInfo Output13;
	Output13.Seed1 = Seed1_IfResult1;
	Output13.Seed2 = Seed2_IfResult1;
	Output13.Seed3 = Seed3_IfResult1;
	Out_RandomInfo = Output13;
	Out_UseDeterministicRandoms = Result19;
}

#line 707 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5154_Func_(float2 In_Min, float2 In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float2 Out_Result, inout FSimulationContext Context)
{
	int Constant35 = (0);
	bool Constant36 = false;
	int Constant37 = 0;
	int Constant38 = (0);
	NiagaraRandInfo NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo;
	bool NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms;
	NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_(In_Seed, Constant35, In_OverrideSeed, Constant37, Constant38, In_FixedOverrideSeed, In_RandomnessMode, NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo, NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms, Context);
	float2 Result20 = In_Max - In_Min;
	int Seed1;
	int Seed2;
	int Seed3;
	Seed1 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo.Seed1;
	Seed2 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo.Seed2;
	Seed3 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo.Seed3;
	float2 Result21 = rand_float(Result20, Seed1, Seed2, Seed3);
	float2 Result22 = rand_float(Result20);
	float2 Random_IfResult;
	if(NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms)
	{
	Random_IfResult = Result21;
	}
	else
	{
	Random_IfResult = Result22;
	}
	float2 Result23 = In_Min + Random_IfResult;
	Out_Result = Result23;
}

#line 740 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5156_Func_(float In_Min, float In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, out float Out_Result, inout FSimulationContext Context)
{
	int Constant52 = (0);
	bool Constant53 = false;
	int Constant54 = 0;
	int Constant55 = (0);
	bool Constant56 = false;
	NiagaraRandInfo NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo1;
	bool NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms1;
	NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_(In_Seed, Constant52, In_OverrideSeed, Constant54, Constant55, Constant56, In_RandomnessMode, NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo1, NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms1, Context);
	float Result31 = In_Max - In_Min;
	int Seed11;
	int Seed21;
	int Seed31;
	Seed11 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo1.Seed1;
	Seed21 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo1.Seed2;
	Seed31 = NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_RandomInfo1.Seed3;
	float Result32 = rand_float(Result31, Seed11, Seed21, Seed31);
	float Result33 = rand_float(Result31);
	float Random_IfResult1;
	if(NiagaraScript_5155_Emitter_Determinism_false_Particle_Func_Output_UseDeterministicRandoms1)
	{
	Random_IfResult1 = Result32;
	}
	else
	{
	Random_IfResult1 = Result33;
	}
	float Result34 = In_Min + Random_IfResult1;
	Out_Result = Result34;
}

#line 774 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5153_Func_(int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float3 Out_UnitVector3D, out float2 Out_UnitVector2D, inout FSimulationContext Context)
{
	float2 Constant33 = float2(0,-1);
	float2 Constant34 = float2(6.28319,1);
	float2 NiagaraScript_5154_Func_Output_Result;
	NiagaraScript_5154_Func_(Constant33, Constant34, In_Seed, In_RandomnessMode, In_OverrideSeed, In_FixedOverrideSeed, NiagaraScript_5154_Func_Output_Result, Context);
	float Phi;
	float CosASC40ThetaASC41;
	Phi = NiagaraScript_5154_Func_Output_Result.x;
	CosASC40ThetaASC41 = NiagaraScript_5154_Func_Output_Result.y;
	float Result24 = cos(Phi);
	float Result25 = CosASC40ThetaASC41 * CosASC40ThetaASC41;
	float Result26 = 1 - Result25;
	float Result27 = sqrt(Result26);
	float Result28 = Result24 * Result27;
	float Result29 = sin(Phi);
	float Result30 = Result29 * Result27;
	float3 PositionOnSphere;
	PositionOnSphere.x = Result28;
	PositionOnSphere.y = Result30;
	PositionOnSphere.z = CosASC40ThetaASC41;
	float Constant47 = 0;
	float Constant48 = 6.28319;
	int Constant49 = -1;
	int Constant50 = 0;
	bool Constant51 = false;
	float NiagaraScript_5156_Func_Output_Result;
	NiagaraScript_5156_Func_(Constant47, Constant48, Constant49, Constant50, Constant51, NiagaraScript_5156_Func_Output_Result, Context);
	float Result35 = cos(NiagaraScript_5156_Func_Output_Result);
	float Result36 = sin(NiagaraScript_5156_Func_Output_Result);
	float2 PositionOnCircle;
	PositionOnCircle.x = Result35;
	PositionOnCircle.y = Result36;
	Out_UnitVector3D = PositionOnSphere;
	Out_UnitVector2D = PositionOnCircle;
}

#line 813 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5152_Func_(int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out float3 Out_Vector, inout FSimulationContext Context)
{
	float3 NiagaraScript_5153_Func_Output_UnitVector3D;
	float2 NiagaraScript_5153_Func_Output_UnitVector2D;
	NiagaraScript_5153_Func_(In_Seed, In_RandomnessMode, In_OverrideSeed, In_FixedOverrideSeed, NiagaraScript_5153_Func_Output_UnitVector3D, NiagaraScript_5153_Func_Output_UnitVector2D, Context);
	Out_Vector = NiagaraScript_5153_Func_Output_UnitVector3D;
}

#line 823 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5139_Func_(int In_SourceSpace, int In_DestinationSpace, float4x4 In_LocalToWorldTransform, float4x4 In_WorldToLocalTransform, bool In_bLocalSpace, out bool Out_bUseOriginal, out float4x4 Out_OutTransform, out bool Out_LocalToWorld, inout FSimulationContext Context)
{
	int Constant69 = 0;
	bool Result45 = NiagaraAll(In_SourceSpace == Constant69);
	int Constant70 = 0;
	bool Result46 = NiagaraAll(In_DestinationSpace == Constant70);
	bool Result47 = Result45 && Result46;
	int Constant71 = 1;
	bool Result48 = NiagaraAll(In_SourceSpace == Constant71);
	int Constant72 = 1;
	bool Result49 = NiagaraAll(In_DestinationSpace == Constant72);
	bool Result50 = Result48 && Result49;
	bool Result51 = Result47 || Result50;
	int Constant73 = 2;
	bool Result52 = NiagaraAll(In_SourceSpace == Constant73);
	int Constant74 = 2;
	bool Result53 = NiagaraAll(In_DestinationSpace == Constant74);
	bool Result54 = Result52 && Result53;
	bool Result55 = Result51 || Result54;
	bool Result56 = Result45 && Result53;
	bool Result57 = Result52 && Result46;
	bool Result58 = Result56 || Result57;
	bool Result59 = In_bLocalSpace && Result58;
	bool Result60 = Result55 || Result59;
	bool Result61 = !In_bLocalSpace;
	bool Result62 = Result45 && Result49;
	bool Result63 = Result48 && Result46;
	bool Result64 = Result62 || Result63;
	bool Result65 = Result61 && Result64;
	bool Result66 = Result60 || Result65;
	bool Result67 = In_bLocalSpace && Result62;
	bool Result68 = Result52 && Result49;
	bool Result69 = Result67 || Result68;
	bool Result70 = Result61 && Result57;
	bool Result71 = Result69 || Result70;
	float4x4 Matrix_IfResult;
	if(Result71)
	{
	Matrix_IfResult = In_LocalToWorldTransform;
	}
	else
	{
	Matrix_IfResult = In_WorldToLocalTransform;
	}
	Out_bUseOriginal = Result66;
	Out_OutTransform = Matrix_IfResult;
	Out_LocalToWorld = Result71;
}

#line 874 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_(float3 In_InVector, int In_SourceSpace, int In_DestinationSpace, bool In_ApplyScale, float4x4 In_Engine_Owner_SystemLocalToWorld, float4x4 In_Engine_Owner_SystemWorldToLocal, float4x4 In_Engine_Owner_SystemLocalToWorldNoScale, float4x4 In_Engine_Owner_SystemWorldToLocalNoScale, out float3 Out_OutVector, inout FSimulationContext Context)
{
	float4x4 Constant66 = (float4x4)0;
	float4x4 LocalToWorld_SelectResult = Constant66;
	float4x4 Constant67 = (float4x4)0;
	float4x4 WorldToLocal_SelectResult = Constant67;
	LocalToWorld_SelectResult = Context.MapSpawn.Engine.Owner.SystemLocalToWorld;
	WorldToLocal_SelectResult = Context.MapSpawn.Engine.Owner.SystemWorldToLocal;
	if(In_ApplyScale == 0)
	{ 
	LocalToWorld_SelectResult = Context.MapSpawn.Engine.Owner.SystemLocalToWorldNoScale;
	WorldToLocal_SelectResult = Context.MapSpawn.Engine.Owner.SystemWorldToLocalNoScale;
	}
	bool Constant68 = false;
	bool NiagaraScript_5139_Func_Output_bUseOriginal;
	float4x4 NiagaraScript_5139_Func_Output_OutTransform;
	bool NiagaraScript_5139_Func_Output_LocalToWorld;
	NiagaraScript_5139_Func_(In_SourceSpace, In_DestinationSpace, LocalToWorld_SelectResult, WorldToLocal_SelectResult, Constant68, NiagaraScript_5139_Func_Output_bUseOriginal, NiagaraScript_5139_Func_Output_OutTransform, NiagaraScript_5139_Func_Output_LocalToWorld, Context);
	float3 Result72 = mul(float4(In_InVector,0.0),NiagaraScript_5139_Func_Output_OutTransform).xyz;
	float3 Constant75 = float3(0.0, 0.0, 0.0);
	float3 Vector_SelectResult1 = Constant75;
	Vector_SelectResult1 = In_InVector;
	if(NiagaraScript_5139_Func_Output_bUseOriginal == 0)
	{ 
	Vector_SelectResult1 = Result72;
	}
	Out_OutVector = Vector_SelectResult1;
}

#line 905 "/Engine/Generated/NiagaraEmitterInstance.ush"
void GridLocation_Emitter_Func_(inout FSimulationContext Context)
{
	float3 Output11;
	Output11.x = Context.MapSpawn.GridLocation.GridXCount;
	Output11.y = Context.MapSpawn.GridLocation.GridYCount;
	Output11.z = Context.MapSpawn.GridLocation.GridZCount;
	Context.MapSpawn.Local.GridLocation.GridXCount = Context.MapSpawn.GridLocation.GridXCount;
	Context.MapSpawn.Local.GridLocation.GridYCount = Context.MapSpawn.GridLocation.GridYCount;
	Context.MapSpawn.Local.GridLocation.GridZCount = Context.MapSpawn.GridLocation.GridZCount;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZCountAsVector = Output11;
	int Result6 = Context.MapSpawn.Local.GridLocation.GridXCount * Context.MapSpawn.Local.GridLocation.GridYCount;
	int Result7 = Context.MapSpawn.GridLocation.ExecIndex / Result6;
	int Result8 = Context.MapSpawn.Local.GridLocation.GridXCount * Result7;
	int Result9 = Context.MapSpawn.Local.GridLocation.GridYCount * Result8;
	int Result10 = Context.MapSpawn.GridLocation.ExecIndex - Result9;
	int Result11 = ModuloPrecise(Result10, Context.MapSpawn.Local.GridLocation.GridXCount);
	int Result12 = Result10 / Context.MapSpawn.Local.GridLocation.GridXCount;
	float3 Output12;
	Output12.x = Result11;
	Output12.y = Result12;
	Output12.z = Result7;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.GridCellCoordinate = Output12;
	Context.MapSpawn.Local.GridLocation.InitialGridSpacing = Output12;
	float3 Result13 = Context.MapSpawn.Local.GridLocation.InitialGridSpacing / Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZCountAsVector;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.NormalizedArraylocation = Result13;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.GridUVW = Result13;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZSpacing = Constants_Emitter_GridLocation_XYZDimensions.xyz;
	float3 Result14 = Constants_Emitter_GridLocation_Offset.xyz * Constants_Emitter_GridLocation_XYZDimensions.xyz;
	bool Result15 = !Context.MapSpawn.GridLocation.RandomizeOverridenSeed;
	float3 NiagaraScript_5152_Func_Output_Vector;
	NiagaraScript_5152_Func_(Constants_Emitter_GridLocation_RandomPlacementSeed, Context.MapSpawn.GridLocation.PlacementRandomnessMode, Context.MapSpawn.GridLocation.OverrideRandomSeed, Result15, NiagaraScript_5152_Func_Output_Vector, Context);
	float3 Constant57 = float3(0.5,0.5,0.5);
	float3 Result37 = NiagaraScript_5152_Func_Output_Vector - Constant57;
	float3 Result38 = Result37 * Constants_Emitter_GridLocation_XYZDimensions.xyz * Constants_Emitter_GridLocation_RandomizePlacementWithinCell.xyz;
	float Constant58 = 0.5;
	float3 Result39 = Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZCountAsVector * Constant58;
	float3 Result40 = Context.MapSpawn.Local.GridLocation.InitialGridSpacing - Result39;
	float3 Result41 = Constants_Emitter_GridLocation_XYZDimensions.xyz * Result40;
	float3 Result42 = Result38 + Result41;
	float3 Vector_IfResult;
	if(Context.MapSpawn.GridLocation.JitterInsideGridCells)
	{
	Vector_IfResult = Result42;
	}
	else
	{
	Vector_IfResult = Result41;
	}
	float3 Result43 = Result14 + Vector_IfResult;
	float3 Result44 = Context.MapSpawn.Local.GridLocation.InitialGridSpacing / Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZCountAsVector;
	Context.MapSpawn.Local.GridLocation.LocalSpacePosition = Result43;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.GridSpacing = Result44;
	Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZSpacing = Context.MapSpawn.OUTPUT_VAR.GridLocation.XYZSpacing;
	int Constant59 = 0;
	bool Constant60 = true;
	float4x4 Constant61 = float4x4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);
	float4x4 Constant62 = float4x4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);
	float4x4 Constant63 = float4x4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);
	float4x4 Constant64 = float4x4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);
	bool Constant65 = false;
	float3 NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_Output_OutVector;
	NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_(Context.MapSpawn.Local.GridLocation.LocalSpacePosition, Context.MapSpawn.GridLocation.CoordinateSpace, Constant59, Constant60, Constant61, Constant62, Constant63, Constant64, NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_Output_OutVector, Context);
	float3 Result73 = Context.MapSpawn.GridLocation.GridOrigin + NiagaraScript_5158_Emitter_Localspace_false_Particle_Func_Output_OutVector;
	Context.MapSpawn.Particles.Position = Result73;
}

#line 973 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_(out float2 Out_CustomHLSLOutput, inout FSimulationContext Context)
{

Out_CustomHLSLOutput = (float2)(Context.MapSpawn.OUTPUT_VAR.GridLocation.GridUVW.xy);
	
}

#line 982 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1_Emitter_Func_(inout FSimulationContext Context)
{
	Context.MapSpawn.Particles.UV = Context.MapSpawn.SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1.Particles.UV;
}

#line 989 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlsl04C64086480DA644FCC88485B815E918_Func_(float In_InFloat, out float Out_OutFloat)
{

Out_OutFloat = saturate (In_InFloat);
}

#line 997 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5150_Particle_Func_(float In_Value, out float Out_ClampedValue, inout FSimulationContext Context)
{
	float CustomHlsl04C64086480DA644FCC88485B815E918_Func_Output_OutFloat;
	CustomHlsl04C64086480DA644FCC88485B815E918_Func_(In_Value, CustomHlsl04C64086480DA644FCC88485B815E918_Func_Output_OutFloat);
	Out_ClampedValue = CustomHlsl04C64086480DA644FCC88485B815E918_Func_Output_OutFloat;
}

#line 1006 "/Engine/Generated/NiagaraEmitterInstance.ush"
void ParticleState_Emitter_Func_(inout FSimulationContext Context)
{
	bool Result74 = NiagaraAll(Context.MapUpdate.Particles.Age <= Context.MapUpdate.Engine.DeltaTime);
	Context.MapUpdate.OUTPUT_VAR.ParticleState.FirstFrame = Result74;
	Context.MapUpdate.Transient.FirstFrame = Result74;
	float Constant77 = 1e-06;
	bool Result75 = NiagaraAll(Context.MapUpdate.ParticleState.Lifetime > Constant77);
	bool Result76 = Context.MapUpdate.Transient.FirstFrame && Result75;
	float Result77 = Context.MapUpdate.Particles.Age + Context.MapUpdate.ParticleState.DeltaTime;
	float Constant78 = 1e-05;
	float Result78 = max(Context.MapUpdate.ParticleState.Lifetime, Constant78);
	bool Result79 = NiagaraAll(Result77 < Result78);
	bool Result80 = Result76 || Result79;
	bool Result81 = Context.MapUpdate.DataInstance.Alive && Result80;
	float Result82 = Result77 / Result78;
	float NiagaraScript_5150_Particle_Func_Output_ClampedValue;
	NiagaraScript_5150_Particle_Func_(Result82, NiagaraScript_5150_Particle_Func_Output_ClampedValue, Context);
	Context.MapUpdate.DataInstance.Alive = Result81;
	Context.MapUpdate.Particles.Age = Result77;
	Context.MapUpdate.Particles.NormalizedAge = NiagaraScript_5150_Particle_Func_Output_ClampedValue;
	bool Constant79 = false;
	bool Constant80 = true;
}

#line 1032 "/Engine/Generated/NiagaraEmitterInstance.ush"
void NiagaraScript_5181_Particle_Func_(int In_TargetChannel, float2 In_Vector2D, out float Out_Float, inout FSimulationContext Context)
{
	float X;
	float Y;
	X = In_Vector2D.x;
	Y = In_Vector2D.y;
	float Constant83 = (0.0);
	float NiagaraFloat_SelectResult2 = Constant83;
	NiagaraFloat_SelectResult2 = X;
	if(In_TargetChannel == 1)
	{ 
	NiagaraFloat_SelectResult2 = Y;
	}
	Out_Float = NiagaraFloat_SelectResult2;
}

#line 1050 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeFloatFromVector2d_Emitter_Func_(out float Out_Float, inout FSimulationContext Context)
{
	float NiagaraScript_5181_Particle_Func_Output_Float;
	NiagaraScript_5181_Particle_Func_(Context.MapUpdate.MakeFloatFromVector2d.Channel, Context.MapUpdate.MakeFloatFromVector2d.Vector2D, NiagaraScript_5181_Particle_Func_Output_Float, Context);
	Out_Float = NiagaraScript_5181_Particle_Func_Output_Float;
}

#line 1059 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Cosine001_Emitter_Func_(out float Out_NewOutput, inout FSimulationContext Context)
{
	float Result83 = cos(Context.MapUpdate.Cosine001.NormalizedAngle*(TWO_PI/Constants_Emitter_Cosine001_Period));
	float Result84 = Result83 * Constants_Emitter_Cosine001_Scale;
	float Result85 = Result84 + Constants_Emitter_Cosine001_Bias;
	Out_NewOutput = Result85;
}

#line 1069 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeFloatFromVector2d001_Emitter_Func_(out float Out_Float, inout FSimulationContext Context)
{
	float NiagaraScript_5181_Particle_Func_Output_Float1;
	NiagaraScript_5181_Particle_Func_(Context.MapUpdate.MakeFloatFromVector2d001.Channel, Context.MapUpdate.MakeFloatFromVector2d001.Vector2D, NiagaraScript_5181_Particle_Func_Output_Float1, Context);
	Out_Float = NiagaraScript_5181_Particle_Func_Output_Float1;
}

#line 1078 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Add_Float001_Emitter_Func_(out float Out_Result, inout FSimulationContext Context)
{
	float Result86 = Context.MapUpdate.Add_Float001.A + Context.MapUpdate.Add_Float001.B;
	Out_Result = Result86;
}

#line 1086 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeVector2D001_Emitter_Func_(out float2 Out_Vec2, inout FSimulationContext Context)
{
	float2 Output14;
	Output14.x = Context.MapUpdate.MakeVector2D001.X;
	Output14.y = Context.MapUpdate.MakeVector2D001.Y;
	Out_Vec2 = Output14;
}

#line 1096 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SampleTexture001_Emitter_Func_(int In_Engine_System_TickCount, int In_Engine_Emitter_InstanceSeed, inout FSimulationContext Context)
{
	float2 Constant86 = float2(0.5,0.5);
	float2 Result87 = Context.MapUpdate.SampleTexture001.UV - Constant86;
	Context.MapUpdate.Local.SampleTexture001.SamplerUV = Context.MapUpdate.SampleTexture001.UV;
	Context.MapUpdate.Local.SampleTexture001.SamplerUV_Centered = Result87;
	float4 SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value;
	SampleTexture2D_Emitter_SampleTexture001_Texture(Context.MapUpdate.Local.SampleTexture001.SamplerUV, Constants_Emitter_SampleTexture001_MipLevel, SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value);
	float X1;
	float Y1;
	float Z;
	float W;
	X1 = SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value.x;
	Y1 = SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value.y;
	Z = SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value.z;
	W = SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value.w;
	Context.MapUpdate.Local.SampleTexture001.SampledColor = SampleTexture2D_Emitter_SampleTexture001_TextureOutput_Value;
	Context.MapUpdate.Local.SampleTexture001.SampledR = X1;
	Context.MapUpdate.Local.SampleTexture001.SampledG = Y1;
	Context.MapUpdate.Local.SampleTexture001.SampledB = Z;
	Context.MapUpdate.Local.SampleTexture001.SampledA = W;
	Context.MapUpdate.Particles.SampleTexture001.SampledColor = Context.MapUpdate.Local.SampleTexture001.SampledColor;
	Context.MapUpdate.Particles.SampleTexture001.SamplerUV = Context.MapUpdate.Local.SampleTexture001.SamplerUV;
	Context.MapUpdate.Particles.SampleTexture001.SampledR = Context.MapUpdate.Local.SampleTexture001.SampledR;
	Context.MapUpdate.Particles.SampleTexture001.SampledG = Context.MapUpdate.Local.SampleTexture001.SampledG;
	Context.MapUpdate.Particles.SampleTexture001.SampledB = Context.MapUpdate.Local.SampleTexture001.SampledB;
	Context.MapUpdate.Particles.SampleTexture001.SampledA = Context.MapUpdate.Local.SampleTexture001.SampledA;
}

#line 1127 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeLinearColorFromFloat001_Emitter_Func_(out float4 Out_LinearColor, inout FSimulationContext Context)
{
	float4 Output15;
	Output15.r = Context.MapUpdate.MakeLinearColorFromFloat001.Value;
	Output15.g = Context.MapUpdate.MakeLinearColorFromFloat001.Value;
	Output15.b = Context.MapUpdate.MakeLinearColorFromFloat001.Value;
	Output15.a = Context.MapUpdate.MakeLinearColorFromFloat001.Value;
	Out_LinearColor = Output15;
}

#line 1139 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Color001_Emitter_Func_(inout FSimulationContext Context)
{
	float3 Output0;
	float Output2;
	Output0.x = Context.MapUpdate.Color001.Color.r;
	Output0.y = Context.MapUpdate.Color001.Color.g;
	Output0.z = Context.MapUpdate.Color001.Color.b;
	Output2 = Context.MapUpdate.Color001.Color.a;
	float3 Result88 = Output0 * Constants_Emitter_Color001_ScaleColor.xyz;
	float Result89 = Output2 * Constants_Emitter_Color001_ScaleAlpha;
	float Result90 = Result89 * Context.MapUpdate.Emitter.AlphaScale;
	float4 Output01;
	Output01.g = Result88.y;
	Output01.a = Result90;
	Output01.r = Result88.x;
	Output01.b = Result88.z;
	Context.MapUpdate.Particles.Color = Output01;
}

#line 1160 "/Engine/Generated/NiagaraEmitterInstance.ush"
void Multiply_Float001_Emitter_Func_(out float Out_Result, inout FSimulationContext Context)
{
	float Result91 = Context.MapUpdate.Multiply_Float001.A * Constants_Emitter_Multiply_Float001_B;
	Out_Result = Result91;
}

#line 1168 "/Engine/Generated/NiagaraEmitterInstance.ush"
void MakeVector001_Emitter_Func_(out float3 Out_Vec3, inout FSimulationContext Context)
{
	float3 Output16;
	Output16.x = Constants_Emitter_MakeVector001_X;
	Output16.y = Constants_Emitter_MakeVector001_Y;
	Output16.z = Context.MapUpdate.MakeVector001.Z;
	Out_Vec3 = Output16;
}

#line 1179 "/Engine/Generated/NiagaraEmitterInstance.ush"
void AddVectorToPosition001_Emitter_Func_(out float3 Out_Position, inout FSimulationContext Context)
{
	float3 Result92 = Context.MapUpdate.AddVectorToPosition001.VECTOR_VAR + Context.MapUpdate.AddVectorToPosition001.Position;
	Out_Position = Result92;
}

#line 1187 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B_Emitter_Func_(inout FSimulationContext Context)
{
	Context.MapUpdate.Particles.Position = Context.MapUpdate.SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B.Particles.Position;
}

#line 1194 "/Engine/Generated/NiagaraEmitterInstance.ush"
void CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_(out bool Out_CustomHLSLOutput, inout FSimulationContext Context)
{

Out_CustomHLSLOutput = (bool)((Particle.Color.a <.1) );
	
}

#line 1203 "/Engine/Generated/NiagaraEmitterInstance.ush"
void KillParticles_Emitter_Func_(inout FSimulationContext Context)
{
	bool Constant87 = false;
	bool bool_IfResult;
	if(Context.MapUpdate.KillParticles.KillParticles)
	{
	bool_IfResult = Constant87;
	}
	else
	{
	bool_IfResult = Context.MapUpdate.DataInstance.Alive;
	}
	Context.MapUpdate.DataInstance.Alive = bool_IfResult;
}

#line 1225 "/Engine/Generated/NiagaraEmitterInstance.ush"
void InterpolateParameters(inout FSimulationContext Context)
{

	int InterpSpawn_Index = ExecIndex();
	float InterpSpawn_SpawnTime = Emitter_InterpSpawnStartDt + (Emitter_SpawnInterval * InterpSpawn_Index);
	float InterpSpawn_UpdateTime = Engine_DeltaTime - InterpSpawn_SpawnTime;
	float InterpSpawn_InvSpawnTime = 1.0 / InterpSpawn_SpawnTime;
	float InterpSpawn_InvUpdateTime = 1.0 / InterpSpawn_UpdateTime;
	float SpawnInterp = InterpSpawn_SpawnTime * Engine_InverseDeltaTime ;
	HackSpawnInterp = SpawnInterp;
	Context.MapSpawn.Interpolation.InterpSpawn_Index = InterpSpawn_Index;
	Context.MapSpawn.Interpolation.InterpSpawn_SpawnTime = InterpSpawn_SpawnTime;
	Context.MapSpawn.Interpolation.InterpSpawn_UpdateTime = InterpSpawn_UpdateTime;
	Context.MapSpawn.Interpolation.InterpSpawn_InvSpawnTime = InterpSpawn_InvSpawnTime;
	Context.MapSpawn.Interpolation.InterpSpawn_InvUpdateTime = InterpSpawn_InvUpdateTime;
	Context.MapSpawn.Interpolation.SpawnInterp = SpawnInterp;
	Context.MapSpawn.Interpolation.Emitter_SpawnInterval = Emitter_SpawnInterval;
	Context.MapSpawn.Interpolation.Emitter_InterpSpawnStartDt = Emitter_InterpSpawnStartDt;
	Context.MapSpawn.Interpolation.Emitter_SpawnGroup = Emitter_SpawnGroup;
	Context.MapSpawn.Engine.Time = lerp(PREV_Engine_Time, Engine_Time, SpawnInterp);
	Context.MapSpawn.Engine.RealTime = lerp(PREV_Engine_RealTime, Engine_RealTime, SpawnInterp);
	Context.MapSpawn.Engine.Owner.TimeSinceRendered = lerp(PREV_Engine_Owner_TimeSinceRendered, Engine_Owner_TimeSinceRendered, SpawnInterp);
	Context.MapSpawn.Engine.Owner.LODDistance = lerp(PREV_Engine_Owner_LODDistance, Engine_Owner_LODDistance, SpawnInterp);
	Context.MapSpawn.Engine.Owner.LODDistanceFraction = lerp(PREV_Engine_Owner_LODDistanceFraction, Engine_Owner_LODDistanceFraction, SpawnInterp);
	Context.MapSpawn.Engine.System.Age = lerp(PREV_Engine_System_Age, Engine_System_Age, SpawnInterp);
	Context.MapSpawn.Engine.Owner.Rotation = lerp(PREV_Engine_Owner_Rotation, Engine_Owner_Rotation, SpawnInterp);
	Context.MapSpawn.Engine.Owner.Position = lerp(PREV_Engine_Owner_Position, Engine_Owner_Position, SpawnInterp);
	Context.MapSpawn.Engine.Owner.Velocity = lerp(PREV_Engine_Owner_Velocity, Engine_Owner_Velocity, SpawnInterp);
	Context.MapSpawn.Engine.Owner.SystemXAxis = lerp(PREV_Engine_Owner_SystemXAxis, Engine_Owner_SystemXAxis, SpawnInterp);
	Context.MapSpawn.Engine.Owner.SystemYAxis = lerp(PREV_Engine_Owner_SystemYAxis, Engine_Owner_SystemYAxis, SpawnInterp);
	Context.MapSpawn.Engine.Owner.SystemZAxis = lerp(PREV_Engine_Owner_SystemZAxis, Engine_Owner_SystemZAxis, SpawnInterp);
	Context.MapSpawn.Engine.Owner.Scale = lerp(PREV_Engine_Owner_Scale, Engine_Owner_Scale, SpawnInterp);
	Context.MapSpawn.Engine.Owner.LWCTile = lerp(PREV_Engine_Owner_LWCTile, Engine_Owner_LWCTile, SpawnInterp);
	Context.MapSpawn.Emitter.Age = lerp(PREV_Emitter_Age, Emitter_Age, SpawnInterp);
	Context.MapSpawn.Emitter.DistanceTraveled = lerp(PREV_Emitter_DistanceTraveled, Emitter_DistanceTraveled, SpawnInterp);
	Context.MapSpawn.Emitter.AlphaScale = lerp(PREV_Emitter_AlphaScale, Emitter_AlphaScale, SpawnInterp);
	Context.MapUpdate.Engine.DeltaTime = InterpSpawn_UpdateTime;
	Context.MapUpdate.Engine.InverseDeltaTime = InterpSpawn_InvUpdateTime;

}

#line 1267 "/Engine/Generated/NiagaraEmitterInstance.ush"
void HandlePreviousValuesForSpawn(inout FSimulationContext Context)
{
Context.MapSpawn.Particles.Previous.Position = Context.MapSpawn.Particles.Position;

Context.MapSpawn.Particles.Previous.SpriteSize = Context.MapSpawn.Particles.SpriteSize;

}

#line 1276 "/Engine/Generated/NiagaraEmitterInstance.ush"
void ReadDataSets(inout FSimulationContext Context)
{
}

#line 1280 "/Engine/Generated/NiagaraEmitterInstance.ush"
void WriteDataSets(inout FSimulationContext Context)
{
}

#line 1285 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SimulateMapSpawn(inout FSimulationContext Context)
{
	
	
	float Constant = (0.0);
	Context.MapSpawn.Particles.MaterialRandom = Constant;
	float Constant1 = (0.0);
	Context.MapSpawn.Particles.Lifetime = Constant1;
	float Constant2 = 1;
	Context.MapSpawn.Particles.Mass = Constant2;
	float2 Constant3 = float2(0.0, 0.0);
	Context.MapSpawn.Particles.SpriteSize = Constant3;
	float3 Constant4 = float3(0.0, 0.0, 0.0);
	Context.MapSpawn.Particles.Position = Constant4;
	float2 Constant5 = float2(0.0, 0.0);
	Context.MapSpawn.Particles.UV = Constant5;
	float Constant6 = 0;
	Context.MapSpawn.Particles.Age = Constant6;
	float Constant7 = (0.0);
	Context.MapSpawn.Particles.NormalizedAge = Constant7;
	float4 Constant8 = float4(1.0, 1.0, 1.0, 1.0);
	Context.MapSpawn.Particles.SampleTexture001.SampledColor = Constant8;
	float2 Constant9 = float2(0.0, 0.0);
	Context.MapSpawn.Particles.SampleTexture001.SamplerUV = Constant9;
	float Constant10 = (0.0);
	Context.MapSpawn.Particles.SampleTexture001.SampledR = Constant10;
	float Constant11 = (0.0);
	Context.MapSpawn.Particles.SampleTexture001.SampledG = Constant11;
	float Constant12 = (0.0);
	Context.MapSpawn.Particles.SampleTexture001.SampledB = Constant12;
	float Constant13 = (0.0);
	Context.MapSpawn.Particles.SampleTexture001.SampledA = Constant13;
	float4 Constant14 = float4(1.0, 1.0, 1.0, 1.0);
	Context.MapSpawn.Particles.Color = Constant14;
	
	int Constant15 = (0);
	float Constant16 = 0;
	float Constant17 = 1;
	int Constant18 = -1;
	int Constant19 = (0);
	int Constant20 = 0;
	int Constant21 = (0);
	int Constant22 = (0);
	float NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_Output_RandomFloat;
	bool NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_Output_IsDeterministic;
	NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_(Constant15, Constant16, Constant17, Constant18, Constant19, Constant20, Constant21, Constant22, NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_Output_RandomFloat, NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_Output_IsDeterministic, Context);
	Context.MapSpawn.InitializeParticle.MaterialRandom = NiagaraScript_5160_Particle_Particle_ScriptUsage4_EvaluationType_NewEnumerator0_FixedRandomSeed_false_OverrideSeed_false_RandomnessMode_NewEnumerator0_Func_Output_RandomFloat;
	int Constant24 = 0;
	Context.MapSpawn.InitializeParticle.PositionOffsetCoordinateSpace = Constant24;
	Context.MapSpawn.Particles.RibbonUVDistance = Context.MapSpawn.Emitter.DistanceTraveled;
	EnterStatScope(1 );
	InitializeParticle_Emitter_Func_(Context);
	ExitStatScope();
	Context.MapSpawn.GridLocation.GridXCount = Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationXCount;
	Context.MapSpawn.GridLocation.GridYCount = Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationYCount;
	Context.MapSpawn.GridLocation.GridZCount = Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationZCount;
	int Result5 = ExecIndex();
	Context.MapSpawn.GridLocation.ExecIndex = Result5;
	bool Constant28 = false;
	Context.MapSpawn.GridLocation.JitterInsideGridCells = Constant28;
	int Constant29 = 0;
	Context.MapSpawn.GridLocation.PlacementRandomnessMode = Constant29;
	bool Constant30 = false;
	Context.MapSpawn.GridLocation.OverrideRandomSeed = Constant30;
	bool Constant31 = true;
	Context.MapSpawn.GridLocation.RandomizeOverridenSeed = Constant31;
	Context.MapSpawn.GridLocation.GridOrigin = Context.MapSpawn.Particles.Position;
	int Constant32 = 2;
	Context.MapSpawn.GridLocation.CoordinateSpace = Constant32;
	EnterStatScope(2 );
	GridLocation_Emitter_Func_(Context);
	ExitStatScope();
	float2 CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_Output_CustomHLSLOutput;
	CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_(CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_Output_CustomHLSLOutput, Context);
	Context.MapSpawn.SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1.Particles.UV = CustomHlslE307B77740AE729130AEF4943C8FA8BD_Func_Output_CustomHLSLOutput;
	EnterStatScope(3 );
	SetVariables_402A2F9146F5CAAEC702ECABB1B5D9B1_Emitter_Func_(Context);
	ExitStatScope();
	


	
	HandlePreviousValuesForSpawn(Context);
	
	Context.MapSpawn.Particles.Initial.Position = Context.MapSpawn.Particles.Position;

	


}

#line 1377 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SimulateMapUpdate(inout FSimulationContext Context)
{
	
	RandomCounterDeterministic = 0;
	bool Constant76 = true;
	Context.MapUpdate.DataInstance.Alive = Constant76;
	Context.MapUpdate.ParticleState.DeltaTime = Context.MapUpdate.Engine.DeltaTime;
	Context.MapUpdate.ParticleState.Lifetime = Context.MapUpdate.Particles.Lifetime;
	EnterStatScope(4 );
	ParticleState_Emitter_Func_(Context);
	ExitStatScope();
	Context.MapUpdate.MakeFloatFromVector2d.Vector2D = Context.MapUpdate.Particles.UV;
	int Constant81 = 1;
	int Constant82 = 0;
	Context.MapUpdate.MakeFloatFromVector2d.Channel = Constant82;
	float MakeFloatFromVector2d_Emitter_Func_Output_Float;
	MakeFloatFromVector2d_Emitter_Func_(MakeFloatFromVector2d_Emitter_Func_Output_Float, Context);
	Context.MapUpdate.Cosine001.NormalizedAngle = Context.MapUpdate.Emitter.Age;
	float Cosine001_Emitter_Func_Output_NewOutput;
	Cosine001_Emitter_Func_(Cosine001_Emitter_Func_Output_NewOutput, Context);
	Context.MapUpdate.MakeFloatFromVector2d001.Vector2D = Context.MapUpdate.Particles.UV;
	Context.MapUpdate.MakeFloatFromVector2d001.Channel = Constant81;
	Context.MapUpdate.Add_Float001.A = MakeFloatFromVector2d_Emitter_Func_Output_Float;
	Context.MapUpdate.Add_Float001.B = Cosine001_Emitter_Func_Output_NewOutput;
	float MakeFloatFromVector2d001_Emitter_Func_Output_Float;
	MakeFloatFromVector2d001_Emitter_Func_(MakeFloatFromVector2d001_Emitter_Func_Output_Float, Context);
	float Add_Float001_Emitter_Func_Output_Result;
	Add_Float001_Emitter_Func_(Add_Float001_Emitter_Func_Output_Result, Context);
	Context.MapUpdate.MakeVector2D001.Y = MakeFloatFromVector2d001_Emitter_Func_Output_Float;
	Context.MapUpdate.MakeVector2D001.X = Add_Float001_Emitter_Func_Output_Result;
	float2 MakeVector2D001_Emitter_Func_Output_Vec2;
	MakeVector2D001_Emitter_Func_(MakeVector2D001_Emitter_Func_Output_Vec2, Context);
	Context.MapUpdate.SampleTexture001.UV = MakeVector2D001_Emitter_Func_Output_Vec2;
	int Constant84 = (0);
	int Constant85 = (0);
	EnterStatScope(5 );
	SampleTexture001_Emitter_Func_(Constant84, Constant85, Context);
	ExitStatScope();
	Context.MapUpdate.MakeLinearColorFromFloat001.Value = Context.MapUpdate.Particles.SampleTexture001.SampledR;
	float4 MakeLinearColorFromFloat001_Emitter_Func_Output_LinearColor;
	MakeLinearColorFromFloat001_Emitter_Func_(MakeLinearColorFromFloat001_Emitter_Func_Output_LinearColor, Context);
	Context.MapUpdate.Color001.Color = MakeLinearColorFromFloat001_Emitter_Func_Output_LinearColor;
	EnterStatScope(6 );
	Color001_Emitter_Func_(Context);
	ExitStatScope();
	Context.MapUpdate.Multiply_Float001.A = Context.MapUpdate.Particles.SampleTexture001.SampledR;
	float Multiply_Float001_Emitter_Func_Output_Result;
	Multiply_Float001_Emitter_Func_(Multiply_Float001_Emitter_Func_Output_Result, Context);
	Context.MapUpdate.MakeVector001.Z = Multiply_Float001_Emitter_Func_Output_Result;
	float3 MakeVector001_Emitter_Func_Output_Vec3;
	MakeVector001_Emitter_Func_(MakeVector001_Emitter_Func_Output_Vec3, Context);
	Context.MapUpdate.AddVectorToPosition001.VECTOR_VAR = MakeVector001_Emitter_Func_Output_Vec3;
	Context.MapUpdate.AddVectorToPosition001.Position = Context.MapUpdate.Particles.Initial.Position;
	float3 AddVectorToPosition001_Emitter_Func_Output_Position;
	AddVectorToPosition001_Emitter_Func_(AddVectorToPosition001_Emitter_Func_Output_Position, Context);
	Context.MapUpdate.SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B.Particles.Position = AddVectorToPosition001_Emitter_Func_Output_Position;
	EnterStatScope(7 );
	SetVariables_422DBF8D458C5CC7EB80EE8AC385E56B_Emitter_Func_(Context);
	ExitStatScope();
	bool CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_Output_CustomHLSLOutput;
	CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_(CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_Output_CustomHLSLOutput, Context);
	Context.MapUpdate.KillParticles.KillParticles = CustomHlslF7E68FE942CAA5E7D25DE59412B7A7A1_Func_Output_CustomHLSLOutput;
	EnterStatScope(8 );
	KillParticles_Emitter_Func_(Context);
	ExitStatScope();
	


}

#line 1451 "/Engine/Generated/NiagaraEmitterInstance.ush"
Texture2D		Emitter_SampleTexture001_Texture_Texture;

#line 1452 "/Engine/Generated/NiagaraEmitterInstance.ush"
SamplerState	Emitter_SampleTexture001_Texture_TextureSampler;

#line 1464 "/Engine/Generated/NiagaraEmitterInstance.ush"
void SampleTexture2D_Emitter_SampleTexture001_Texture(in float2 UV, in float MipLevel, out float4 OutValue)
{
	OutValue = Emitter_SampleTexture001_Texture_Texture.SampleLevel(Emitter_SampleTexture001_Texture_TextureSampler, UV, MipLevel);
}

#line 1485 "/Engine/Generated/NiagaraEmitterInstance.ush"
void InitConstants(inout FSimulationContext Context)
{

	Context.MapSpawn.Emitter.DistanceTraveled = Emitter_DistanceTraveled;
	Context.MapSpawn.Engine.Owner.Position = Engine_Owner_Position;
	Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationXCount = Emitter_SpawnParticlesInGrid_GridLocationXCount;
	Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationYCount = Emitter_SpawnParticlesInGrid_GridLocationYCount;
	Context.MapSpawn.Emitter.SpawnParticlesInGrid.GridLocationZCount = Emitter_SpawnParticlesInGrid_GridLocationZCount;
	Context.MapSpawn.Emitter.RandomSeed = Emitter_RandomSeed;
	Context.MapSpawn.Engine.System.TickCount = Engine_System_TickCount;
	Context.MapSpawn.Engine.Owner.SystemLocalToWorld = Engine_Owner_SystemLocalToWorld;
	Context.MapSpawn.Engine.Owner.SystemWorldToLocal = Engine_Owner_SystemWorldToLocal;
	Context.MapSpawn.Engine.Owner.SystemLocalToWorldNoScale = Engine_Owner_SystemLocalToWorldNoScale;
	Context.MapSpawn.Engine.Owner.SystemWorldToLocalNoScale = Engine_Owner_SystemWorldToLocalNoScale;


	Context.MapUpdate.Engine.DeltaTime = Engine_DeltaTime;
	Context.MapUpdate.Emitter.Age = Emitter_Age;
	Context.MapUpdate.Emitter.AlphaScale = Emitter_AlphaScale;
	Context.MapUpdate.Engine.Time = Engine_Time;
	Context.MapUpdate.Engine.WorldDeltaTime = Engine_WorldDeltaTime;
	Context.MapUpdate.Engine.InverseDeltaTime = Engine_InverseDeltaTime;
	Context.MapUpdate.Engine.ExecutionCount = Engine_ExecutionCount;
	Context.MapUpdate.Emitter.SpawnRate = Emitter_SpawnRate;
	Context.MapUpdate.Engine.Emitter.TotalSpawnedParticles = Engine_Emitter_TotalSpawnedParticles;
	Context.MapUpdate.Emitter.RandomSeed = Emitter_RandomSeed;
	Context.MapUpdate.Engine.Emitter.InstanceSeed = Engine_Emitter_InstanceSeed;
	Context.MapUpdate.Engine.System.RandomSeed = Engine_System_RandomSeed;

}

#line 1516 "/Engine/Generated/NiagaraEmitterInstance.ush"
void InitSpawnVariables(inout FSimulationContext Context)
{

	Context.MapSpawn.Particles.Age = 0.0f;
	Context.MapSpawn.Particles.Color.r = 0.0f;
	Context.MapSpawn.Particles.Color.g = 0.0f;
	Context.MapSpawn.Particles.Color.b = 0.0f;
	Context.MapSpawn.Particles.Color.a = 0.0f;
	Context.MapSpawn.Particles.Initial.Position.x = 0.0f;
	Context.MapSpawn.Particles.Initial.Position.y = 0.0f;
	Context.MapSpawn.Particles.Initial.Position.z = 0.0f;
	Context.MapSpawn.Particles.Lifetime = 0.0f;
	Context.MapSpawn.Particles.Mass = 0.0f;
	Context.MapSpawn.Particles.MaterialRandom = 0.0f;
	Context.MapSpawn.Particles.NormalizedAge = 0.0f;
	Context.MapSpawn.Particles.Position.x = 0.0f;
	Context.MapSpawn.Particles.Position.y = 0.0f;
	Context.MapSpawn.Particles.Position.z = 0.0f;
	Context.MapSpawn.Particles.Previous.Position.x = 0.0f;
	Context.MapSpawn.Particles.Previous.Position.y = 0.0f;
	Context.MapSpawn.Particles.Previous.Position.z = 0.0f;
	Context.MapSpawn.Particles.Previous.SpriteSize.x = 0.0f;
	Context.MapSpawn.Particles.Previous.SpriteSize.y = 0.0f;
	Context.MapSpawn.Particles.RibbonUVDistance = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledA = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledB = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledColor.r = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledColor.g = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledColor.b = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledColor.a = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledG = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SampledR = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SamplerUV.x = 0.0f;
	Context.MapSpawn.Particles.SampleTexture001.SamplerUV.y = 0.0f;
	Context.MapSpawn.Particles.SpriteSize.x = 0.0f;
	Context.MapSpawn.Particles.SpriteSize.y = 0.0f;
	Context.MapSpawn.Particles.UniqueID = 0;
	Context.MapSpawn.Particles.UV.x = 0.0f;
	Context.MapSpawn.Particles.UV.y = 0.0f;

	Context.MapSpawn.DataInstance.Alive=true;

}

#line 1560 "/Engine/Generated/NiagaraEmitterInstance.ush"
void LoadUpdateVariables(inout FSimulationContext Context, int InstanceIdx)
{

		Context.MapUpdate.Array.Age = 0;
		Context.MapUpdate.Particles.Age = InputDataFloat(0, 0, InstanceIdx);
		Context.MapUpdate.Array.Color = 1;
		Context.MapUpdate.Particles.Color.r = InputDataFloat(0, 1, InstanceIdx);
		Context.MapUpdate.Particles.Color.g = InputDataFloat(0, 2, InstanceIdx);
		Context.MapUpdate.Particles.Color.b = InputDataFloat(0, 3, InstanceIdx);
		Context.MapUpdate.Particles.Color.a = InputDataFloat(0, 4, InstanceIdx);
		Context.MapUpdate.Array.Initial.Position = 5;
		Context.MapUpdate.Particles.Initial.Position.x = InputDataFloat(0, 5, InstanceIdx);
		Context.MapUpdate.Particles.Initial.Position.y = InputDataFloat(0, 6, InstanceIdx);
		Context.MapUpdate.Particles.Initial.Position.z = InputDataFloat(0, 7, InstanceIdx);
		Context.MapUpdate.Array.Lifetime = 8;
		Context.MapUpdate.Particles.Lifetime = InputDataFloat(0, 8, InstanceIdx);
		Context.MapUpdate.Array.Mass = 9;
		Context.MapUpdate.Particles.Mass = InputDataFloat(0, 9, InstanceIdx);
		Context.MapUpdate.Array.MaterialRandom = 10;
		Context.MapUpdate.Particles.MaterialRandom = InputDataFloat(0, 10, InstanceIdx);
		Context.MapUpdate.Array.NormalizedAge = 11;
		Context.MapUpdate.Particles.NormalizedAge = InputDataFloat(0, 11, InstanceIdx);
		Context.MapUpdate.Array.Position = 12;
		Context.MapUpdate.Particles.Position.x = InputDataFloat(0, 12, InstanceIdx);
		Context.MapUpdate.Particles.Position.y = InputDataFloat(0, 13, InstanceIdx);
		Context.MapUpdate.Particles.Position.z = InputDataFloat(0, 14, InstanceIdx);
		Context.MapUpdate.Array.RibbonUVDistance = 20;
		Context.MapUpdate.Particles.RibbonUVDistance = InputDataFloat(0, 20, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SampledA = 21;
		Context.MapUpdate.Particles.SampleTexture001.SampledA = InputDataFloat(0, 21, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SampledB = 22;
		Context.MapUpdate.Particles.SampleTexture001.SampledB = InputDataFloat(0, 22, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SampledColor = 23;
		Context.MapUpdate.Particles.SampleTexture001.SampledColor.r = InputDataFloat(0, 23, InstanceIdx);
		Context.MapUpdate.Particles.SampleTexture001.SampledColor.g = InputDataFloat(0, 24, InstanceIdx);
		Context.MapUpdate.Particles.SampleTexture001.SampledColor.b = InputDataFloat(0, 25, InstanceIdx);
		Context.MapUpdate.Particles.SampleTexture001.SampledColor.a = InputDataFloat(0, 26, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SampledG = 27;
		Context.MapUpdate.Particles.SampleTexture001.SampledG = InputDataFloat(0, 27, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SampledR = 28;
		Context.MapUpdate.Particles.SampleTexture001.SampledR = InputDataFloat(0, 28, InstanceIdx);
		Context.MapUpdate.Array.SampleTexture001.SamplerUV = 29;
		Context.MapUpdate.Particles.SampleTexture001.SamplerUV.x = InputDataFloat(0, 29, InstanceIdx);
		Context.MapUpdate.Particles.SampleTexture001.SamplerUV.y = InputDataFloat(0, 30, InstanceIdx);
		Context.MapUpdate.Array.SpriteSize = 31;
		Context.MapUpdate.Particles.SpriteSize.x = InputDataFloat(0, 31, InstanceIdx);
		Context.MapUpdate.Particles.SpriteSize.y = InputDataFloat(0, 32, InstanceIdx);
		Context.MapUpdate.Array.UniqueID = 0;
		Context.MapUpdate.Particles.UniqueID = InputDataInt(0, 0, InstanceIdx);
		Context.MapUpdate.Array.UV = 33;
		Context.MapUpdate.Particles.UV.x = InputDataFloat(0, 33, InstanceIdx);
		Context.MapUpdate.Particles.UV.y = InputDataFloat(0, 34, InstanceIdx);
		Context.MapUpdate.Particles.Previous.Position = 		Context.MapUpdate.Particles.Position;
		Context.MapUpdate.Particles.Previous.SpriteSize = 		Context.MapUpdate.Particles.SpriteSize;
		Context.MapUpdate.DataInstance.Alive=true;

}

#line 1618 "/Engine/Generated/NiagaraEmitterInstance.ush"
void ConditionalInterpolateParameters(inout FSimulationContext Context)
{
	InterpolateParameters(Context);
}

#line 1623 "/Engine/Generated/NiagaraEmitterInstance.ush"
void TransferAttributes(inout FSimulationContext Context)
{

		Context.MapUpdate.Particles = Context.MapSpawn.Particles;
		Context.MapUpdate.DataInstance.Alive = true;

}

#line 1631 "/Engine/Generated/NiagaraEmitterInstance.ush"
void StoreUpdateVariables(in FSimulationContext Context, bool bIsValidInstance)
{

		const bool bValid = bIsValidInstance && Context.MapUpdate.DataInstance.Alive;
		const int WriteIndex = OutputIndex(0, true, bValid);
		if (bValid)
		{
			OutputDataFloat(0, 0, WriteIndex, Context.MapUpdate.Particles.Age);
			OutputDataFloat(0, 1, WriteIndex, Context.MapUpdate.Particles.Color.r);
			OutputDataFloat(0, 2, WriteIndex, Context.MapUpdate.Particles.Color.g);
			OutputDataFloat(0, 3, WriteIndex, Context.MapUpdate.Particles.Color.b);
			OutputDataFloat(0, 4, WriteIndex, Context.MapUpdate.Particles.Color.a);
			OutputDataFloat(0, 5, WriteIndex, Context.MapUpdate.Particles.Initial.Position.x);
			OutputDataFloat(0, 6, WriteIndex, Context.MapUpdate.Particles.Initial.Position.y);
			OutputDataFloat(0, 7, WriteIndex, Context.MapUpdate.Particles.Initial.Position.z);
			OutputDataFloat(0, 8, WriteIndex, Context.MapUpdate.Particles.Lifetime);
			OutputDataFloat(0, 9, WriteIndex, Context.MapUpdate.Particles.Mass);
			OutputDataFloat(0, 10, WriteIndex, Context.MapUpdate.Particles.MaterialRandom);
			OutputDataFloat(0, 11, WriteIndex, Context.MapUpdate.Particles.NormalizedAge);
			OutputDataFloat(0, 12, WriteIndex, Context.MapUpdate.Particles.Position.x);
			OutputDataFloat(0, 13, WriteIndex, Context.MapUpdate.Particles.Position.y);
			OutputDataFloat(0, 14, WriteIndex, Context.MapUpdate.Particles.Position.z);
			OutputDataFloat(0, 15, WriteIndex, Context.MapUpdate.Particles.Previous.Position.x);
			OutputDataFloat(0, 16, WriteIndex, Context.MapUpdate.Particles.Previous.Position.y);
			OutputDataFloat(0, 17, WriteIndex, Context.MapUpdate.Particles.Previous.Position.z);
			OutputDataFloat(0, 18, WriteIndex, Context.MapUpdate.Particles.Previous.SpriteSize.x);
			OutputDataFloat(0, 19, WriteIndex, Context.MapUpdate.Particles.Previous.SpriteSize.y);
			OutputDataFloat(0, 20, WriteIndex, Context.MapUpdate.Particles.RibbonUVDistance);
			OutputDataFloat(0, 21, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledA);
			OutputDataFloat(0, 22, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledB);
			OutputDataFloat(0, 23, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledColor.r);
			OutputDataFloat(0, 24, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledColor.g);
			OutputDataFloat(0, 25, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledColor.b);
			OutputDataFloat(0, 26, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledColor.a);
			OutputDataFloat(0, 27, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledG);
			OutputDataFloat(0, 28, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SampledR);
			OutputDataFloat(0, 29, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SamplerUV.x);
			OutputDataFloat(0, 30, WriteIndex, Context.MapUpdate.Particles.SampleTexture001.SamplerUV.y);
			OutputDataFloat(0, 31, WriteIndex, Context.MapUpdate.Particles.SpriteSize.x);
			OutputDataFloat(0, 32, WriteIndex, Context.MapUpdate.Particles.SpriteSize.y);
			OutputDataInt(0, 0, WriteIndex, Context.MapUpdate.Particles.UniqueID);
			OutputDataFloat(0, 33, WriteIndex, Context.MapUpdate.Particles.UV.x);
			OutputDataFloat(0, 34, WriteIndex, Context.MapUpdate.Particles.UV.y);
		}


}

#line 1689 "/Engine/Generated/NiagaraEmitterInstance.ush"
[numthreads(64, 1, 1)]
void SimulateMainComputeCS(
	uint3 InDispatchThreadId	: SV_DispatchThreadID,
	uint3 InGroupId				: SV_GroupID,
	uint3 InGroupThreadId		: SV_GroupThreadID,
	uint  InGroupIndex			: SV_GroupIndex)
{
	GDispatchThreadId	= InDispatchThreadId;
	GGroupId			= InGroupId;
	GGroupThreadId		= InGroupThreadId;
	GGroupIndex			= InGroupIndex;
	GEmitterTickCounter = EmitterTickCounter;
	GRandomSeedOffset = 0;











	GLinearThreadId		= GDispatchThreadId.x + (GDispatchThreadId.y * DispatchThreadIdToLinear.y);
	




	bool bRunSpawnUpdateLogic = true;
	if (ReadInstanceCountOffset == 0xFFFFFFFF)
	{
		GSpawnStartInstance = 0;
	}
	else
	{
		GSpawnStartInstance = RWInstanceCounts[ReadInstanceCountOffset];
	}
	const uint MaxInstances = GSpawnStartInstance + NumSpawnedInstances;
	const bool bRunUpdateLogic = bRunSpawnUpdateLogic && GLinearThreadId < GSpawnStartInstance && GLinearThreadId < MaxInstances;
	const bool bRunSpawnLogic = bRunSpawnUpdateLogic && GLinearThreadId >= GSpawnStartInstance && GLinearThreadId < MaxInstances;
	
	const float RandomSeedInitialisation = NiagaraInternalNoise(GLinearThreadId * 16384, 0 * 8196, (bRunUpdateLogic ? 4096 : 0) + EmitterTickCounter);	
	
	FSimulationContext Context = (FSimulationContext)0;
	[branch]
	if (bRunUpdateLogic)
	{
		SetupExecIndexForGPU();
		InitConstants(Context);
		LoadUpdateVariables(Context, GLinearThreadId);
		ReadDataSets(Context);
	}
	else if (bRunSpawnLogic)
	{
		SetupExecIndexAndSpawnInfoForGPU();
		InitConstants(Context);
		InitSpawnVariables(Context);
		ReadDataSets(Context);
		Context.MapSpawn.Particles.UniqueID = Engine_Emitter_TotalSpawnedParticles + GLinearThreadId - GSpawnStartInstance;
		ConditionalInterpolateParameters(Context);
		SimulateMapSpawn(Context);
		TransferAttributes(Context);
	}

	if (bRunUpdateLogic || bRunSpawnLogic)
	{
		SimulateMapUpdate(Context);
		WriteDataSets(Context);
	}

	StoreUpdateVariables(Context, bRunUpdateLogic || bRunSpawnLogic);


}



#if 0 /*BEGIN_RESOURCE_TABLES*/
View, 376963194
Strata, 158337041
DrawRectangleParameters, 3145984
InstancedView, 450888449
MobileSceneTextures, 147131313
SceneTexturesStruct, 158338568
StrataPublic, 1048841
NULL, 0
View_MaterialTextureBilinearWrapedSampler, View, 8, 0
View_MaterialTextureBilinearClampedSampler, View, 8, 1
View_VolumetricLightmapIndirectionTexture, View, 5, 2
View_VolumetricLightmapBrickAmbientVector, View, 5, 3
View_VolumetricLightmapBrickSHCoefficients0, View, 5, 4
View_VolumetricLightmapBrickSHCoefficients1, View, 5, 5
View_VolumetricLightmapBrickSHCoefficients2, View, 5, 6
View_VolumetricLightmapBrickSHCoefficients3, View, 5, 7
View_VolumetricLightmapBrickSHCoefficients4, View, 5, 8
View_VolumetricLightmapBrickSHCoefficients5, View, 5, 9
View_SkyBentNormalBrickTexture, View, 5, 10
View_DirectionalLightShadowingBrickTexture, View, 5, 11
View_VolumetricLightmapBrickAmbientVectorSampler, View, 8, 12
View_VolumetricLightmapTextureSampler0, View, 8, 13
View_VolumetricLightmapTextureSampler1, View, 8, 14
View_VolumetricLightmapTextureSampler2, View, 8, 15
View_VolumetricLightmapTextureSampler3, View, 8, 16
View_VolumetricLightmapTextureSampler4, View, 8, 17
View_VolumetricLightmapTextureSampler5, View, 8, 18
View_SkyBentNormalTextureSampler, View, 8, 19
View_DirectionalLightShadowingTextureSampler, View, 8, 20
View_GlobalDistanceFieldPageAtlasTexture, View, 5, 21
View_GlobalDistanceFieldCoverageAtlasTexture, View, 5, 22
View_GlobalDistanceFieldPageTableTexture, View, 5, 23
View_GlobalDistanceFieldMipTexture, View, 5, 24
View_GlobalDistanceFieldPageAtlasTextureSampler, View, 8, 25
View_GlobalDistanceFieldCoverageAtlasTextureSampler, View, 8, 26
View_GlobalDistanceFieldMipTextureSampler, View, 8, 27
View_AtmosphereTransmittanceTexture, View, 5, 28
View_AtmosphereTransmittanceTextureSampler, View, 8, 29
View_AtmosphereIrradianceTexture, View, 5, 30
View_AtmosphereIrradianceTextureSampler, View, 8, 31
View_AtmosphereInscatterTexture, View, 5, 32
View_AtmosphereInscatterTextureSampler, View, 8, 33
View_PerlinNoiseGradientTexture, View, 5, 34
View_PerlinNoiseGradientTextureSampler, View, 8, 35
View_PerlinNoise3DTexture, View, 5, 36
View_PerlinNoise3DTextureSampler, View, 8, 37
View_SobolSamplingTexture, View, 5, 38
View_SharedPointWrappedSampler, View, 8, 39
View_SharedPointClampedSampler, View, 8, 40
View_SharedBilinearWrappedSampler, View, 8, 41
View_SharedBilinearClampedSampler, View, 8, 42
View_SharedBilinearAnisoClampedSampler, View, 8, 43
View_SharedTrilinearWrappedSampler, View, 8, 44
View_SharedTrilinearClampedSampler, View, 8, 45
View_PreIntegratedBRDF, View, 5, 46
View_PreIntegratedBRDFSampler, View, 8, 47
View_SkyIrradianceEnvironmentMap, View, 6, 48
View_TransmittanceLutTexture, View, 5, 49
View_TransmittanceLutTextureSampler, View, 8, 50
View_SkyViewLutTexture, View, 5, 51
View_SkyViewLutTextureSampler, View, 8, 52
View_DistantSkyLightLutTexture, View, 5, 53
View_DistantSkyLightLutTextureSampler, View, 8, 54
View_CameraAerialPerspectiveVolume, View, 5, 55
View_CameraAerialPerspectiveVolumeSampler, View, 8, 56
View_CameraAerialPerspectiveVolumeMieOnly, View, 5, 57
View_CameraAerialPerspectiveVolumeMieOnlySampler, View, 8, 58
View_CameraAerialPerspectiveVolumeRayOnly, View, 5, 59
View_CameraAerialPerspectiveVolumeRayOnlySampler, View, 8, 60
View_HairScatteringLUTTexture, View, 5, 61
View_HairScatteringLUTSampler, View, 8, 62
View_GGXLTCMatTexture, View, 5, 63
View_GGXLTCMatSampler, View, 8, 64
View_GGXLTCAmpTexture, View, 5, 65
View_GGXLTCAmpSampler, View, 8, 66
View_SheenLTCTexture, View, 5, 67
View_SheenLTCSampler, View, 8, 68
View_ShadingEnergyGGXSpecTexture, View, 5, 69
View_ShadingEnergyGGXGlassTexture, View, 5, 70
View_ShadingEnergyClothSpecTexture, View, 5, 71
View_ShadingEnergyDiffuseTexture, View, 5, 72
View_ShadingEnergySampler, View, 8, 73
View_GlintTexture, View, 5, 74
View_GlintSampler, View, 8, 75
View_SimpleVolumeTexture, View, 5, 76
View_SimpleVolumeTextureSampler, View, 8, 77
View_SimpleVolumeEnvTexture, View, 5, 78
View_SimpleVolumeEnvTextureSampler, View, 8, 79
View_SSProfilesTexture, View, 5, 80
View_SSProfilesSampler, View, 8, 81
View_SSProfilesTransmissionSampler, View, 8, 82
View_SSProfilesPreIntegratedTexture, View, 5, 83
View_SSProfilesPreIntegratedSampler, View, 8, 84
View_SpecularProfileTexture, View, 5, 85
View_SpecularProfileSampler, View, 8, 86
View_WaterIndirection, View, 6, 87
View_WaterData, View, 6, 88
View_RectLightAtlasTexture, View, 5, 89
View_RectLightAtlasSampler, View, 8, 90
View_IESAtlasTexture, View, 5, 91
View_IESAtlasSampler, View, 8, 92
View_LandscapeWeightmapSampler, View, 8, 93
View_LandscapeIndirection, View, 6, 94
View_LandscapePerComponentData, View, 6, 95
View_VTFeedbackBuffer, View, 7, 96
View_PhysicsFieldClipmapBuffer, View, 6, 97
Strata_MaterialTextureArray, Strata, 9, 0
Strata_TopLayerTexture, Strata, 9, 1
Strata_OpaqueRoughRefractionTexture, Strata, 9, 2
Strata_BSDFOffsetTexture, Strata, 9, 3
Strata_BSDFTileTexture, Strata, 9, 4
Strata_BSDFTileCountBuffer, Strata, 16, 5
MobileSceneTextures_SceneColorTexture, MobileSceneTextures, 9, 0
MobileSceneTextures_SceneColorTextureSampler, MobileSceneTextures, 8, 1
MobileSceneTextures_SceneDepthTexture, MobileSceneTextures, 9, 2
MobileSceneTextures_SceneDepthTextureSampler, MobileSceneTextures, 8, 3
MobileSceneTextures_ScenePartialDepthTexture, MobileSceneTextures, 9, 4
MobileSceneTextures_ScenePartialDepthTextureSampler, MobileSceneTextures, 8, 5
MobileSceneTextures_CustomDepthTexture, MobileSceneTextures, 9, 6
MobileSceneTextures_CustomDepthTextureSampler, MobileSceneTextures, 8, 7
MobileSceneTextures_CustomStencilTexture, MobileSceneTextures, 12, 8
MobileSceneTextures_SceneVelocityTexture, MobileSceneTextures, 9, 9
MobileSceneTextures_SceneVelocityTextureSampler, MobileSceneTextures, 8, 10
MobileSceneTextures_GBufferATexture, MobileSceneTextures, 9, 11
MobileSceneTextures_GBufferBTexture, MobileSceneTextures, 9, 12
MobileSceneTextures_GBufferCTexture, MobileSceneTextures, 9, 13
MobileSceneTextures_GBufferDTexture, MobileSceneTextures, 9, 14
MobileSceneTextures_SceneDepthAuxTexture, MobileSceneTextures, 9, 15
MobileSceneTextures_LocalLightTextureA, MobileSceneTextures, 9, 16
MobileSceneTextures_LocalLightTextureB, MobileSceneTextures, 9, 17
MobileSceneTextures_GBufferATextureSampler, MobileSceneTextures, 8, 18
MobileSceneTextures_GBufferBTextureSampler, MobileSceneTextures, 8, 19
MobileSceneTextures_GBufferCTextureSampler, MobileSceneTextures, 8, 20
MobileSceneTextures_GBufferDTextureSampler, MobileSceneTextures, 8, 21
MobileSceneTextures_SceneDepthAuxTextureSampler, MobileSceneTextures, 8, 22
SceneTexturesStruct_SceneColorTexture, SceneTexturesStruct, 9, 0
SceneTexturesStruct_SceneDepthTexture, SceneTexturesStruct, 9, 1
SceneTexturesStruct_ScenePartialDepthTexture, SceneTexturesStruct, 9, 2
SceneTexturesStruct_GBufferATexture, SceneTexturesStruct, 9, 3
SceneTexturesStruct_GBufferBTexture, SceneTexturesStruct, 9, 4
SceneTexturesStruct_GBufferCTexture, SceneTexturesStruct, 9, 5
SceneTexturesStruct_GBufferDTexture, SceneTexturesStruct, 9, 6
SceneTexturesStruct_GBufferETexture, SceneTexturesStruct, 9, 7
SceneTexturesStruct_GBufferFTexture, SceneTexturesStruct, 9, 8
SceneTexturesStruct_GBufferVelocityTexture, SceneTexturesStruct, 9, 9
SceneTexturesStruct_ScreenSpaceAOTexture, SceneTexturesStruct, 9, 10
SceneTexturesStruct_CustomDepthTexture, SceneTexturesStruct, 9, 11
SceneTexturesStruct_CustomStencilTexture, SceneTexturesStruct, 12, 12
SceneTexturesStruct_PointClampSampler, SceneTexturesStruct, 8, 13
StrataPublic_TopLayerTexture, StrataPublic, 9, 0
NULL, NULL, 0, 0
#endif /*END_RESOURCE_TABLES*/
#if 0 /*DIRECT COMPILE*/
-directcompile -format=PCD3D_SM6 -entry=SimulateMainComputeCS -shaderPlatformName=PCD3D_SM6 -cs C:/Users/madar/Desktop/AJ/Proyectos Personales/UnrealEffects/UnrealEffects/Saved/ShaderDebugInfo/PCD3D_SM6/SampleTextures/Empty/ParticleGPUComputeScript/FNiagaraShader/0/NiagaraEmitterInstanceShader.usf -cflags=8590987264 -nocrashreports
#endif /*DIRECT COMPILE*/
